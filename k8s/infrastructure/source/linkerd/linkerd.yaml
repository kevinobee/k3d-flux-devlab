---
###
### Linkerd Namespace
###
kind: Namespace
apiVersion: v1
metadata:
  name: linkerd
  annotations:
    linkerd.io/inject: disabled
  labels:
    linkerd.io/is-control-plane: "true"
    config.linkerd.io/admission-webhooks: disabled
    linkerd.io/control-plane-ns: linkerd
---
###
### Identity Controller Service RBAC
###
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-identity
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: ["authentication.k8s.io"]
  resources: ["tokenreviews"]
  verbs: ["create"]
- apiGroups: ["apps"]
  resources: ["deployments"]
  verbs: ["get"]
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create", "patch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-identity
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-linkerd-identity
subjects:
- kind: ServiceAccount
  name: linkerd-identity
  namespace: linkerd
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-identity
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
---
###
### Destination Controller Service
###
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-destination
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: ["apps"]
  resources: ["replicasets"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["batch"]
  resources: ["jobs"]
  verbs: ["list", "get", "watch"]
- apiGroups: [""]
  resources: ["pods", "endpoints", "services", "nodes", "namespaces"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["linkerd.io"]
  resources: ["serviceprofiles"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["discovery.k8s.io"]
  resources: ["endpointslices"]
  verbs: ["list", "get", "watch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-destination
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-linkerd-destination
subjects:
- kind: ServiceAccount
  name: linkerd-destination
  namespace: linkerd
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-destination
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-sp-validator-k8s-tls
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.0
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURURENDQWpTZ0F3SUJBZ0lRVjVPTVNlV2h1YmdFRXNRazBNYXg3akFOQmdrcWhraUc5dzBCQVFzRkFEQXIKTVNrd0p3WURWUVFERXlCc2FXNXJaWEprTFhOd0xYWmhiR2xrWVhSdmNpNXNhVzVyWlhKa0xuTjJZekFlRncweQpNakE1TURreE1ETTVOVFZhRncweU16QTVNRGt4TURNNU5UVmFNQ3N4S1RBbkJnTlZCQU1USUd4cGJtdGxjbVF0CmMzQXRkbUZzYVdSaGRHOXlMbXhwYm10bGNtUXVjM1pqTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEEKTUlJQkNnS0NBUUVBd3FTdWFkdGlHTzgzMS9reFdzWFNhQ1poRFZUZFVRRGt4Vnh2dzhxQ1NEejljYVhCd215Ugo3ak9BZDFQQ28yS2FFT29PMHpLN0NZeTh1aHBsZWYxQ0dCSWNQOXVtK25YQ2wza3BMY0dmUXMxbUc1OXhkb1ArCmx3U2drTThkYXhQWjg1cnBPcjFIeE45OFo5WW5xMTBYckxLYnpSdXdKZlBhMnFRMmVzakpNNWtQZHZFbGZkQk8KZ3BiZWVQWCtjRE1icGdsQ3JuVENtUWJXalA3ZDg5bGlKQ2tidmtGK1ltYUsyNWdzbzhFMVZST0MxQjI3dHNEaQptZ1FDTlludkgrQWRrQ1ErU040aEgvcmJ2T2pLYnVpLy9aSklSZ1BoQ05EK2p0K0NiL1FBRWdFbE12OGVTTVJUCmNoTzljUnpXaXBBc3lWKytqY1RzVzNsNEdSait2TDZQblFJREFRQUJvMnd3YWpBT0JnTlZIUThCQWY4RUJBTUMKQmFBd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQXdHQTFVZEV3RUIvd1FDTUFBdwpLd1lEVlIwUkJDUXdJb0lnYkdsdWEyVnlaQzF6Y0MxMllXeHBaR0YwYjNJdWJHbHVhMlZ5WkM1emRtTXdEUVlKCktvWklodmNOQVFFTEJRQURnZ0VCQUNPV21QbGpqdlk2MGV0RXl0Yk5ISGQ0dk5TeDFsSzloTzd6NGlJd1V0MEIKVktmWFkyM0NMTHd1TElXRFF3S3E2VWFmYXRYTy9nS3AzMjBlMlFjR0h0RGY1bjNyOXNMNk5nNEJiUXZoYXBvRQo1QzVNeXhjVmIxN0NwZVJtcnh6bXF4NGRldDREUE95MUwxOFpxRjRmdzZTeW95OWp6WlVuRzlJQ3hwc3pFVUxsCllFVFExUnZYWFV0TndYaGU2anZwaGlxNXpYNldZbXZOSmQ0OFlsTUNnNEFONnFmdXlhNGtabXlYNGZ5dTNsaEwKaGJhNjZjRnpsYjlqYy9hTmNPZFU4cGpXMHVEYUdRbGc2SVBwaXBCRkVmeWZSNEg1aGIzaDZvTVArUXVaWk1saApyc2NJQ1BDdWc2OE1wNHdMb1d3eHcwSVRyNjNRWTM5YkRud0ZIbDNkaDA4PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBd3FTdWFkdGlHTzgzMS9reFdzWFNhQ1poRFZUZFVRRGt4Vnh2dzhxQ1NEejljYVhCCndteVI3ak9BZDFQQ28yS2FFT29PMHpLN0NZeTh1aHBsZWYxQ0dCSWNQOXVtK25YQ2wza3BMY0dmUXMxbUc1OXgKZG9QK2x3U2drTThkYXhQWjg1cnBPcjFIeE45OFo5WW5xMTBYckxLYnpSdXdKZlBhMnFRMmVzakpNNWtQZHZFbApmZEJPZ3BiZWVQWCtjRE1icGdsQ3JuVENtUWJXalA3ZDg5bGlKQ2tidmtGK1ltYUsyNWdzbzhFMVZST0MxQjI3CnRzRGltZ1FDTlludkgrQWRrQ1ErU040aEgvcmJ2T2pLYnVpLy9aSklSZ1BoQ05EK2p0K0NiL1FBRWdFbE12OGUKU01SVGNoTzljUnpXaXBBc3lWKytqY1RzVzNsNEdSait2TDZQblFJREFRQUJBb0lCQUUyMlhvU1pPTU5uejA0RgppalVKd29ZZXZLVUwrd2o2YUZ4OEdZdDhjU1BTWmdaWC9kSlljck0rRU02VHZLUnJHOFFoRHlZM25RR2xGVHpnCmlSOTVoRWdFQXc5ajdYa1dSMGtlOE5mNTlGSkJtOER2bWVlTnI3b3YrTU9ZVGRDUXJuWmFwVC8wanBFR0FhK2IKaTE4WjNmZnZuOUQyZXcvTUd0Y3N0U3UwdXRCRVcrMW5TajBQYUh4bWJkbUhXeG12MWtPZGFhWlMwbktPa2Y5ZgppaVRTZnVrbmgzQXRHbUh2ZjJ2SWZzNnplUElLS3FiTjduVzl1TklrNXF5M3RpQ0gyUzJLcVN0QVdGWEVnOUtnCmVrVkZpRThGaDdvZGc1MnNUUXIwaURwKzJLOTZscWhRNG1NWjlnSWloR3J5cTlibjJWK0hFa2ZSRllpY3FKcngKU2tQMXBjRUNnWUVBNE0vQ2UvbUdHVE1zbldMK1UwajJxbk04S0pLcGRXT3VBOUVwTDlONC9TV1Zvem83Q2RzQQpJVEUyemlRcGxMellVMHRyZnVnays0bHR2MGRxb2tHK1VyTm8yT3JDTU1xMTJtVkdsM1lUa1k0SVhiU1Zlb3N4CkxhWlc5YXdZMUtQenQwLy9INmVNVE1udUlBcXBGWTNpMmp6dVg5QjZnVEs4aDNsaXQ5cHBiMGtDZ1lFQTNhVjgKMFZvK044Y1BoSkw0dlJZYkFJUHBQMEFDUFQ5YkFtRi9JMjNxY2VtT2I2ZVM1NFFuTFdLdnNRcWRvMUc5RmpSTAo0MFViZFBMNzl2UXFNT2RQTVF5T1oxTkJCZVV0NW5JUThSSlB0MmJrTzJLRUgyNFJxKzdxb1NudHVqKytXeXZrCmwrdTFYUi9HMkRtWDFCSEJFQzZoNnlweG1VMU92bjhFRmFQdTJiVUNnWUFVM3JTclZhckJSQ0xzS1hoNnV0ZEwKVTQ5T0pPOWVXbmFaSEIyNnR1TVFmU0M3R25qSW5YQVJwTVAxdHgyMUZTTHYrSnh1RjViM1V2YkJQeHdESEI5VApCaHpCcG1tSXBnamowV3NRUElIc2pVYnhqQVlrYmkrT2tWYVpUL1N1S05wRE5rWDA1bFQ3Ky9NRFBub2I2aVFaCkpuYnFwaXY1T29DT0F4TExCcGVySVFLQmdRQ0hTbE1VNnJPZGtrajdrRVo2REhzdzVsUENRc3piRzhmdWZScUEKd3IvZkJrUG1EWEJURnN4ZkhLVEhPUWFkd08vZEZORFppYjVIdFdWdENQNlQyU3p5Y0lxZnNTYTRkWHA5OWxRMwpBZ2xjbGxacmxTZTJrNVgvejVheUJ3alByY2NBbVpzdnpEVnBBVk43ZWpRZHd6U0lMeDZ3ajdqRmJYWEtPM2QvCnlnK3FIUUtCZ0dvWVZ4OFNMVTZHZ081bWFkMlN2QlAzdmZpZ2hVSktJNWQ5SlBaRkR6SUVNZ0UvaWtJbU1QU3UKaVVkczJjMk1JYXZwS3dwNkgrQVluZXh6UXFNelhQTG1KeUhhb3BDeFRWc0NxdHFmTTMyWDBLQVBkRzErR3lqcgo3ekREZldJWkdzcFJLdngxcWF4Z0tpNmI1Zzhrb1VGVFIvTUtCS0psMXpXcEpvVjN4dnhSCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0t
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: linkerd-sp-validator-webhook-config
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
webhooks:
- name: linkerd-sp-validator.linkerd.io
  namespaceSelector:
    matchExpressions:
    - key: config.linkerd.io/admission-webhooks
      operator: NotIn
      values:
      - disabled
  clientConfig:
    service:
      name: linkerd-sp-validator
      namespace: linkerd
      path: "/"
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURURENDQWpTZ0F3SUJBZ0lRVjVPTVNlV2h1YmdFRXNRazBNYXg3akFOQmdrcWhraUc5dzBCQVFzRkFEQXIKTVNrd0p3WURWUVFERXlCc2FXNXJaWEprTFhOd0xYWmhiR2xrWVhSdmNpNXNhVzVyWlhKa0xuTjJZekFlRncweQpNakE1TURreE1ETTVOVFZhRncweU16QTVNRGt4TURNNU5UVmFNQ3N4S1RBbkJnTlZCQU1USUd4cGJtdGxjbVF0CmMzQXRkbUZzYVdSaGRHOXlMbXhwYm10bGNtUXVjM1pqTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEEKTUlJQkNnS0NBUUVBd3FTdWFkdGlHTzgzMS9reFdzWFNhQ1poRFZUZFVRRGt4Vnh2dzhxQ1NEejljYVhCd215Ugo3ak9BZDFQQ28yS2FFT29PMHpLN0NZeTh1aHBsZWYxQ0dCSWNQOXVtK25YQ2wza3BMY0dmUXMxbUc1OXhkb1ArCmx3U2drTThkYXhQWjg1cnBPcjFIeE45OFo5WW5xMTBYckxLYnpSdXdKZlBhMnFRMmVzakpNNWtQZHZFbGZkQk8KZ3BiZWVQWCtjRE1icGdsQ3JuVENtUWJXalA3ZDg5bGlKQ2tidmtGK1ltYUsyNWdzbzhFMVZST0MxQjI3dHNEaQptZ1FDTlludkgrQWRrQ1ErU040aEgvcmJ2T2pLYnVpLy9aSklSZ1BoQ05EK2p0K0NiL1FBRWdFbE12OGVTTVJUCmNoTzljUnpXaXBBc3lWKytqY1RzVzNsNEdSait2TDZQblFJREFRQUJvMnd3YWpBT0JnTlZIUThCQWY4RUJBTUMKQmFBd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQXdHQTFVZEV3RUIvd1FDTUFBdwpLd1lEVlIwUkJDUXdJb0lnYkdsdWEyVnlaQzF6Y0MxMllXeHBaR0YwYjNJdWJHbHVhMlZ5WkM1emRtTXdEUVlKCktvWklodmNOQVFFTEJRQURnZ0VCQUNPV21QbGpqdlk2MGV0RXl0Yk5ISGQ0dk5TeDFsSzloTzd6NGlJd1V0MEIKVktmWFkyM0NMTHd1TElXRFF3S3E2VWFmYXRYTy9nS3AzMjBlMlFjR0h0RGY1bjNyOXNMNk5nNEJiUXZoYXBvRQo1QzVNeXhjVmIxN0NwZVJtcnh6bXF4NGRldDREUE95MUwxOFpxRjRmdzZTeW95OWp6WlVuRzlJQ3hwc3pFVUxsCllFVFExUnZYWFV0TndYaGU2anZwaGlxNXpYNldZbXZOSmQ0OFlsTUNnNEFONnFmdXlhNGtabXlYNGZ5dTNsaEwKaGJhNjZjRnpsYjlqYy9hTmNPZFU4cGpXMHVEYUdRbGc2SVBwaXBCRkVmeWZSNEg1aGIzaDZvTVArUXVaWk1saApyc2NJQ1BDdWc2OE1wNHdMb1d3eHcwSVRyNjNRWTM5YkRud0ZIbDNkaDA4PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t
  failurePolicy: Ignore
  admissionReviewVersions: ["v1", "v1beta1"]
  rules:
  - operations: ["CREATE", "UPDATE"]
    apiGroups: ["linkerd.io"]
    apiVersions: ["v1alpha1", "v1alpha2"]
    resources: ["serviceprofiles"]
  sideEffects: None
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-policy-validator-k8s-tls
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.0
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURXVENDQWtHZ0F3SUJBZ0lSQUwyeU1QU2JaeU95U0NLWmhXWWQ2QWN3RFFZSktvWklodmNOQVFFTEJRQXcKTHpFdE1Dc0dBMVVFQXhNa2JHbHVhMlZ5WkMxd2IyeHBZM2t0ZG1Gc2FXUmhkRzl5TG14cGJtdGxjbVF1YzNaagpNQjRYRFRJeU1Ea3dPVEV3TXprMU5Wb1hEVEl6TURrd09URXdNemsxTlZvd0x6RXRNQ3NHQTFVRUF4TWtiR2x1CmEyVnlaQzF3YjJ4cFkza3RkbUZzYVdSaGRHOXlMbXhwYm10bGNtUXVjM1pqTUlJQklqQU5CZ2txaGtpRzl3MEIKQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBcGtXcUxjZWtoM0ZGc1phdVRRc2lVU1k4THlBSlRVM3NpMU1GR0lIawpEK3dPSEdYNVpoK3EzZFlqNytUcFVhTnhNUnUrbkFSMG0rZklib1VWK0RJNWZLM01lNmMrelBZa0R4MmoreXVjCnFVMVEwSjBhSzBNWi9OSGFMYnRWdHAvOEpveG9oa0hGWjA2ZmlQNE8yUC92aVRqWitpcTJ6UjhxVFRKMm9xVVcKelJDbTNMTU9keDV2TktRbVNWMjVXU2VFejNuYTBlK3B5c1FCTkhTZ25pbGtTeUFnbFRwNEQ0OFFBZE5walB5dQphUW0wODBUMVVJWWlFVlNIMXRIb3ZmdVlhNFhKeUxJYm5QS3BKRkM3NGdNd01EcmpiZ21KNFJlOXZhU2NFOVc4ClpDMy9ONjFxeDRmWkQxRmlxOXgyczV2ZFNSQlM2Y29UcEI1d3FReVFiMk82NVFJREFRQUJvM0F3YmpBT0JnTlYKSFE4QkFmOEVCQU1DQmFBd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQXdHQTFVZApFd0VCL3dRQ01BQXdMd1lEVlIwUkJDZ3dKb0lrYkdsdWEyVnlaQzF3YjJ4cFkza3RkbUZzYVdSaGRHOXlMbXhwCmJtdGxjbVF1YzNaak1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQTFYTWl5dkN3Ni9PWWkxcFpUWUtGdWt3S3kKYjE3UVQvZXN3MkVidlRLTmFJMFZVbEl5N3o4ZDJpUERZNE9yRmxqWUpRUlIxbVkzZEJYQTNoM3RWN1FJZDdsOQplYXJoMW50bFVmZ2ljMkhkMDBMZzB6Vno3d0d5RUxrY2FpMVFwNHNUdFFiWmVvSk1YREJJT1R5M2lPQjFob1IyClhxd2tzN2JIZ3FnQ1BvQ1IzbWJxaUd4bUwzVkFIeHdXTGZJUlhXd1hjRllkZlZNN3NWOHMvOUQrall2RmFhYlQKNy9QWW9HTjFCb2VUVXk3b090OFh0TVlVdkdidm15WTh2OW55RzE3cmJjdzZGTGhGakV2TlVZMzE0aER6MnVTUwpKb1FNNFZHVGhaVmV2VUhJSXB3cnZQdDdCTzZlSXRYZzVPaExpSGx6aHRUQ2cwZzhWckZsMURydUN5eEkKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBcGtXcUxjZWtoM0ZGc1phdVRRc2lVU1k4THlBSlRVM3NpMU1GR0lIa0Qrd09IR1g1ClpoK3EzZFlqNytUcFVhTnhNUnUrbkFSMG0rZklib1VWK0RJNWZLM01lNmMrelBZa0R4MmoreXVjcVUxUTBKMGEKSzBNWi9OSGFMYnRWdHAvOEpveG9oa0hGWjA2ZmlQNE8yUC92aVRqWitpcTJ6UjhxVFRKMm9xVVd6UkNtM0xNTwpkeDV2TktRbVNWMjVXU2VFejNuYTBlK3B5c1FCTkhTZ25pbGtTeUFnbFRwNEQ0OFFBZE5walB5dWFRbTA4MFQxClVJWWlFVlNIMXRIb3ZmdVlhNFhKeUxJYm5QS3BKRkM3NGdNd01EcmpiZ21KNFJlOXZhU2NFOVc4WkMzL042MXEKeDRmWkQxRmlxOXgyczV2ZFNSQlM2Y29UcEI1d3FReVFiMk82NVFJREFRQUJBb0lCQUYxSEs4ZHUvckExTGFJSgpKRk40Y1pJUTN5YVkxRjhYM2lIek95S2FpL1VhdW5mWUJXZnpVQW9QZmkyd3YrdmF3eitIanhFN3RxZFlDcXRsCjRnTlJPY3JtUFpjSkprUVp1ZlQ0N2V1VWRkak0xUStUY3dEZUxoQVZNazhCajM1YWxqeVIvSG1GSUZkcVZqbW0KUFhJamNxQUswczV6ZEFYeSsrbys2eXNuYm5rdmZNOVhsL3NOdHdwaXdnczVyQkhRSElmSEZ6STk1N3ZMcFdRbgp2cHlGK21RZmRxQjNCalZOWllhZWtxc3B4OTNmeXNXNUw4M00weWNETWlsOEtFVGxTUnNRTnd3TnB1VGZPWXpnCkNMYlJmanFPaW5pS1RJa2JtRzN5QldheERQVUEwVndHcGtJakR0UHJWTy92dkpjK290eGdoSGdjeTI3aUNSSy8KMEtHSEZrRUNnWUVBelRwZkJ6SFpzY29DLzdRSW9oRjRkK0ZxSDF2VzhSWTlxQnhqeGJ4RGNDcDZ6VEZpRDZsYgozN1lZVzhIWjNkeXpSUWxRMWlGbStQWlpZYVorQlhuOXh1bU5icTFvR1h2YTMvZ0sxMHVoMW9RUGJRdmZ0R1VHCmd4RlMvMmpmRTlHdkxpc0wwY0JlM0RLTjdkcWdsNWFrRXQ4bHRYUUZlTVhSZEd6RTRBaldtajBDZ1lFQXoyZ2QKZUsyK0tNVkozOEdhMWpqRWs5dmM2T3VOejR1MlY2V29GY1h4NGJzT3E0Y1EvMzQ1a3l0dmtRVHBWZEpSVmZXWQpqKzl2SlBUa0tjcDFHazZ3anJQaXBRWUJaRnZtdFQ2SVpGb0pzWDB0cTJSUkNyTWRraDM2bTRITG5hNkxNYmVWCjdRWUpjRmZXN3NXSUN1Yy9SWW9ocFBZeXBwR0F4cXZEd21JdU5ja0NnWUVBeE1ubCtVWXAwcnM4YU9pL0puak8KSlZXMnB0OHZtZm1Ub2JHblVpSVdJR1g3WHVxdGR3c1VsODFLU2lIMXdUSXhqRTlFZmkrRlI5RWhIK3ZBQjR4VQpkZm5acm5rRXl2cmlnOFNhMEpzclVrRkxjV3JqVlYxU0F6Z0hkL1dkZ3FtYjZ3OUh4QmRNWHFUelIxSk9qMHpaCmcyY0tCNVo2OExYdkJFNlA4YXRIN0prQ2dZRUFyRFBJakdMTXlMTU5JKzl0N0VFVHphTzFaZG4xVXdXdjdsT0gKSEJUT1FGbjcweVNBVTNEc3dxbEVwMFpKcVV6RzVUVFZaMlFuaHFxaEthV0Qxc1RReUpySUtiV3p3Q3loZjRnYwozQno1Z1ZqcWF5d09NWEVIczBLYXlUUlo1MkI5QjFsaTdIbWZxcHZ6d3lsVVM2RTJJam1PdDVVRjl0QkYrQzJ5CmloalVQeWtDZ1lFQWtJU2szcEJJV2syRm1YNDhVb3M4bVJoWlNUa1B5blJmMk5kdk80N2xUemNrbVZRWVNQRlkKYk04LzZNQTFmbmo0Zm9OMGpvVjNBbVhmd2VDb2Vrc3JNbnNyU2N6WGdvbjRqV1BIaC9NeGY4K1ptYzEvRm11VQpkcXVhSEhiZEd1d3RQZnZ5U25zVEprdW51aWlSbTZWSVQzQmdyRWZZeFMwOWtDZ0RQZXJRUS9JPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQ==
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: linkerd-policy-validator-webhook-config
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
webhooks:
- name: linkerd-policy-validator.linkerd.io
  namespaceSelector:
    matchExpressions:
    - key: config.linkerd.io/admission-webhooks
      operator: NotIn
      values:
      - disabled
  clientConfig:
    service:
      name: linkerd-policy-validator
      namespace: linkerd
      path: "/"
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURXVENDQWtHZ0F3SUJBZ0lSQUwyeU1QU2JaeU95U0NLWmhXWWQ2QWN3RFFZSktvWklodmNOQVFFTEJRQXcKTHpFdE1Dc0dBMVVFQXhNa2JHbHVhMlZ5WkMxd2IyeHBZM2t0ZG1Gc2FXUmhkRzl5TG14cGJtdGxjbVF1YzNaagpNQjRYRFRJeU1Ea3dPVEV3TXprMU5Wb1hEVEl6TURrd09URXdNemsxTlZvd0x6RXRNQ3NHQTFVRUF4TWtiR2x1CmEyVnlaQzF3YjJ4cFkza3RkbUZzYVdSaGRHOXlMbXhwYm10bGNtUXVjM1pqTUlJQklqQU5CZ2txaGtpRzl3MEIKQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBcGtXcUxjZWtoM0ZGc1phdVRRc2lVU1k4THlBSlRVM3NpMU1GR0lIawpEK3dPSEdYNVpoK3EzZFlqNytUcFVhTnhNUnUrbkFSMG0rZklib1VWK0RJNWZLM01lNmMrelBZa0R4MmoreXVjCnFVMVEwSjBhSzBNWi9OSGFMYnRWdHAvOEpveG9oa0hGWjA2ZmlQNE8yUC92aVRqWitpcTJ6UjhxVFRKMm9xVVcKelJDbTNMTU9keDV2TktRbVNWMjVXU2VFejNuYTBlK3B5c1FCTkhTZ25pbGtTeUFnbFRwNEQ0OFFBZE5walB5dQphUW0wODBUMVVJWWlFVlNIMXRIb3ZmdVlhNFhKeUxJYm5QS3BKRkM3NGdNd01EcmpiZ21KNFJlOXZhU2NFOVc4ClpDMy9ONjFxeDRmWkQxRmlxOXgyczV2ZFNSQlM2Y29UcEI1d3FReVFiMk82NVFJREFRQUJvM0F3YmpBT0JnTlYKSFE4QkFmOEVCQU1DQmFBd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQXdHQTFVZApFd0VCL3dRQ01BQXdMd1lEVlIwUkJDZ3dKb0lrYkdsdWEyVnlaQzF3YjJ4cFkza3RkbUZzYVdSaGRHOXlMbXhwCmJtdGxjbVF1YzNaak1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQTFYTWl5dkN3Ni9PWWkxcFpUWUtGdWt3S3kKYjE3UVQvZXN3MkVidlRLTmFJMFZVbEl5N3o4ZDJpUERZNE9yRmxqWUpRUlIxbVkzZEJYQTNoM3RWN1FJZDdsOQplYXJoMW50bFVmZ2ljMkhkMDBMZzB6Vno3d0d5RUxrY2FpMVFwNHNUdFFiWmVvSk1YREJJT1R5M2lPQjFob1IyClhxd2tzN2JIZ3FnQ1BvQ1IzbWJxaUd4bUwzVkFIeHdXTGZJUlhXd1hjRllkZlZNN3NWOHMvOUQrall2RmFhYlQKNy9QWW9HTjFCb2VUVXk3b090OFh0TVlVdkdidm15WTh2OW55RzE3cmJjdzZGTGhGakV2TlVZMzE0aER6MnVTUwpKb1FNNFZHVGhaVmV2VUhJSXB3cnZQdDdCTzZlSXRYZzVPaExpSGx6aHRUQ2cwZzhWckZsMURydUN5eEkKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ==
  failurePolicy: Ignore
  admissionReviewVersions: ["v1", "v1beta1"]
  rules:
  - operations: ["CREATE", "UPDATE"]
    apiGroups: ["policy.linkerd.io"]
    apiVersions: ["v1alpha1", "v1beta1"]
    resources:
    - authorizationpolicies
    - httproutes
    - networkauthentications
    - meshtlsauthentications
    - serverauthorizations
    - servers
  sideEffects: None
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: linkerd-policy
  labels:
    app.kubernetes.io/part-of: Linkerd
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
rules:
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - policy.linkerd.io
    resources:
      - authorizationpolicies
      - httproutes
      - meshtlsauthentications
      - networkauthentications
      - servers
      - serverauthorizations
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: linkerd-destination-policy
  labels:
    app.kubernetes.io/part-of: Linkerd
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-policy
subjects:
  - kind: ServiceAccount
    name: linkerd-destination
    namespace: linkerd
---
###
### Heartbeat RBAC
###
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get"]
  resourceNames: ["linkerd-config"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    linkerd.io/control-plane-ns: linkerd
roleRef:
  kind: Role
  name: linkerd-heartbeat
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: linkerd-heartbeat
  namespace: linkerd
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: linkerd-heartbeat
  labels:
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: [""]
  resources: ["namespaces"]
  verbs: ["list"]
- apiGroups: ["linkerd.io"]
  resources: ["serviceprofiles"]
  verbs: ["list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: linkerd-heartbeat
  labels:
    linkerd.io/control-plane-ns: linkerd
roleRef:
  kind: ClusterRole
  name: linkerd-heartbeat
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: linkerd-heartbeat
  namespace: linkerd
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: heartbeat
    linkerd.io/control-plane-ns: linkerd
---
###
### Proxy Injector RBAC
###
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-proxy-injector
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create", "patch"]
- apiGroups: [""]
  resources: ["namespaces", "replicationcontrollers"]
  verbs: ["list", "get", "watch"]
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["list", "watch"]
- apiGroups: ["extensions", "apps"]
  resources: ["deployments", "replicasets", "daemonsets", "statefulsets"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["extensions", "batch"]
  resources: ["cronjobs", "jobs"]
  verbs: ["list", "get", "watch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-proxy-injector
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
subjects:
- kind: ServiceAccount
  name: linkerd-proxy-injector
  namespace: linkerd
  apiGroup: ""
roleRef:
  kind: ClusterRole
  name: linkerd-linkerd-proxy-injector
  apiGroup: rbac.authorization.k8s.io
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-proxy-injector
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-proxy-injector-k8s-tls
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.0
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURVakNDQWpxZ0F3SUJBZ0lRTDR1UjE5TGFiR0srUnhZQ2lUZ3VmVEFOQmdrcWhraUc5dzBCQVFzRkFEQXQKTVNzd0tRWURWUVFERXlKc2FXNXJaWEprTFhCeWIzaDVMV2x1YW1WamRHOXlMbXhwYm10bGNtUXVjM1pqTUI0WApEVEl5TURrd09URXdNemsxTlZvWERUSXpNRGt3T1RFd016azFOVm93TFRFck1Da0dBMVVFQXhNaWJHbHVhMlZ5ClpDMXdjbTk0ZVMxcGJtcGxZM1J2Y2k1c2FXNXJaWEprTG5OMll6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQUQKZ2dFUEFEQ0NBUW9DZ2dFQkFNTnpZOXBrNXJBdlZHL0gwVmxYUlRwc3ZxVGl1WEFmdmFBR3hYa0tFTGJSSlN1UApCYWlibXRhVkJXVVlIWTVkZXgwR1JGcW8raU1kWlcxY1llSkltck5oQ2M3MzNpSmR3V3EwL3NRVDFtWm9lenRQCk5VVDZNSTh0UUs0dmM5SEw5VEZmZ1FCYlZ2MkpqQ3llLzEwY3c0dHlKbzFvQWFzRlZpNnJIU094dlFjdWpubEMKY2xXOTB2R1JFUlV5eFpVVElKZjd3NXcrbnV4em1CeXNBMlNCbHBRV1pNMTZxOWlIWCtQa3pYd2dSRk10NlN6Lwp4cTU1ZlZVVEdLT0FUYWVVTklhb3JNYXhVV1MvT081V08rS3RFZG5lQUhYcEdjM3pHUjE4Zy9xNTBINHdQcWpoClRDc1VaSDl6NkJhT05YREpZTlVxdFRaN2FOQmZqOWJvNm1FL3p6Y0NBd0VBQWFOdU1Hd3dEZ1lEVlIwUEFRSC8KQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBTUJnTlZIUk1CQWY4RQpBakFBTUMwR0ExVWRFUVFtTUNTQ0lteHBibXRsY21RdGNISnZlSGt0YVc1cVpXTjBiM0l1YkdsdWEyVnlaQzV6CmRtTXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBSXNDZ0tNbHNxeGxBblJDRllpVnRPZVlWTUNMU2grWVEyWWwKaTN4cG4ydWp2M2tnRUYyVTB3Q3lOUExsNW1MbzdGOEpDYkpFS3NVYi8rbHF3eCtQdFd1ZkJ1cmdXeUhTb0EwUApyRmRsMlgrNWZSK0x1MUhQMWhpMVpON3NROWpGZ09xTkFTU3Nsb2tjZyt1WFNkT0FuYml2c3V5L1MwTW5LdENFCnNWSnZsbUlHbTV0UDc1MFdrSWxZZlYzN2ZmWlZnUExCejU3eVlOSG9ETktBQThONlRHTHlLajd1ZkVLM25SU2YKekpNVlhMcTZwYVBYSFQ2Wnh5Yk1hMHZvTDdvb01HMWNYOVhFNDVxZzJCZW5RMnVYazdXZ3Z2SzZLVFNlT3AzRApjSDlDTUJWTjRsNGdwalJhckhwdWNxaEJyaFo3Zks3cENJNmdYcytEdXFUaFJYaG9UOUE9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBdzNOajJtVG1zQzlVYjhmUldWZEZPbXkrcE9LNWNCKzlvQWJGZVFvUXR0RWxLNDhGCnFKdWExcFVGWlJnZGpsMTdIUVpFV3FqNkl4MWxiVnhoNGtpYXMyRUp6dmZlSWwzQmFyVCt4QlBXWm1oN08wODEKUlBvd2p5MUFyaTl6MGN2MU1WK0JBRnRXL1ltTUxKNy9YUnpEaTNJbWpXZ0Jxd1ZXTHFzZEk3RzlCeTZPZVVKeQpWYjNTOFpFUkZUTEZsUk1nbC92RG5ENmU3SE9ZSEt3RFpJR1dsQlprelhxcjJJZGY0K1ROZkNCRVV5M3BMUC9HCnJubDlWUk1ZbzRCTnA1UTBocWlzeHJGUlpMODQ3bFk3NHEwUjJkNEFkZWtaemZNWkhYeUQrcm5RZmpBK3FPRk0KS3hSa2YzUG9GbzQxY01sZzFTcTFObnRvMEYrUDF1anFZVC9QTndJREFRQUJBb0lCQUMyeW5nY2pEbGpsU0EyMgpuM2tQRVkyZWZWaVo5aGVFSkZiMUhsaTFoTURwMTVIK3A2a0xjTUY1S0VEQnlhOU9wZ2xjUE1FaHZ4SlV2akU2CnAxdzc4NGU3U1lyTm8yOVBrbmg3aHhHYlBjYkY2UUl0Kzl0N3o3eTZMT1JORGZ4Z2ZweWpvc3JOa0dKSk5hLzkKSU9ISlp1TUV0b1RiYTRCc0NBRnpXcVhNMmRDQ3BoSnRmSHp1S1h6QTRqVUlmTG5BRm5lTDhlYWpLbnNhUnRBQQp4SzdSZVYxcnc0ODZkYlBBa3hHYXd3VlkxL1hodyszclQxUnduTzMrOEtwTFZVY2JGSXJoTjBMSUFDUzFTTjFtCk1DTUF6eFFoNnhkUkhuYVh3MC8yQXo0RFFjUUN2Z3R2OElocFRkR3pDaDltcGNLUXNBcGZBT1R5UEtnWVhqRTcKMzBEd1JLRUNnWUVBOWkvN1dMT2FBV3FraDVFR1hDbURjYkNZaGExWXdvMmRTeGRuTXN4bytXK0ZVUExYUVRDTApKaFFNWFRlTWk2R3ZYSXBud0o5c3RldmNPUm1rTVBJak15bDFpdzVNL1lVTlZuMk5OV1JtTno1bDl0L2JYZEtHCnFQVGFUOUdzTnRxS1hGb1NaN2FKclVPdkdzaGNlU25EMHhMU3RBOG40cXRJbXZWeWJiWHRoVkVDZ1lFQXl6MjEKRExxSnNMTUtiUzdLSVFxMjVBVnZ2M2dHOEVPUERCd01IZWRtdHpEUGk0YWFMY29VVmo1N1FPOTFKSVk2WHlGNgpsUGxRcjdYZUtrZ0VsVnZXRm9oS2VBdUJJYkRzMFNNeWpkRG8rZmVYUWtrVTFxSnNEakdxcDNBSVRzbXVYc1YxCi90UmdHL25oQ2lVSVJDYXord0V4eGxBT05yS3VLbi8xMGFUTUNnY0NnWUExREgzU3pWREFRV1NXdWM5dkNKc0UKWXBOYkt0Rlhpd0I3NzkwUyt5MGJvc1pOZlNhWks0YXdlOTEyTU1RZVNvYnBJQUhmWmZzYzhHZ1IvYzU5cFkrawpOS2paZ0FsakQ4cWgrb2YxRzE5VFJDVGduN2c3YldRTEFFZ1NyeEcyK0R5Y1RlUnRhTTRlQWRtM29ia2JlcjV4CnV6cWdCaXdJRWZTaFA0YWEwWHNQSVFLQmdBbkV4NFQ3R2s4aDYraGZqVnVWTmtFemViR01SVmtiQmk4ZzBmeEYKK1F2cERyQzRJWVQ5NTRoVnJIcnNoNGJmNU1KWnk1aUplelZXMm56UnhWYWdlV1BQM1RSejZSc0RjLzZCWUphcwphZVpKM2oxVFllc0hGNFovSUtLM29jNlhwd2ZyR2NiTDBtckYwZWs0Nm5MTUlXNTVHamxiODdMeFY2bTNTTXR3CnpsWFZBb0dBRytnZ2Jpc1czem1qMVNlZks2ZUtOWXRESXRkTWRpM3ZHeUw1Nm93S3dZV0lscVo3R3oxcHRoS1YKNGN4czFha1YrVnVpVXFFRHNnN3BHRGVCSkM3UmlYUmVCelRRSzVaenUwUkhHK2ZmU3hMSG1BdmF6THVVb1M5OAppdm45MnljRnNNQlJkcW9YSUlqcjVteEdtVTBZQ05wOE1wclRETnVqNElCWnQreDg5TVk9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0t
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: linkerd-proxy-injector-webhook-config
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
webhooks:
- name: linkerd-proxy-injector.linkerd.io
  namespaceSelector:
    matchExpressions:
    - key: config.linkerd.io/admission-webhooks
      operator: NotIn
      values:
      - disabled
    - key: kubernetes.io/metadata.name
      operator: NotIn
      values:
      - kube-system
      - cert-manager
  objectSelector:
    null
  clientConfig:
    service:
      name: linkerd-proxy-injector
      namespace: linkerd
      path: "/"
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURVakNDQWpxZ0F3SUJBZ0lRTDR1UjE5TGFiR0srUnhZQ2lUZ3VmVEFOQmdrcWhraUc5dzBCQVFzRkFEQXQKTVNzd0tRWURWUVFERXlKc2FXNXJaWEprTFhCeWIzaDVMV2x1YW1WamRHOXlMbXhwYm10bGNtUXVjM1pqTUI0WApEVEl5TURrd09URXdNemsxTlZvWERUSXpNRGt3T1RFd016azFOVm93TFRFck1Da0dBMVVFQXhNaWJHbHVhMlZ5ClpDMXdjbTk0ZVMxcGJtcGxZM1J2Y2k1c2FXNXJaWEprTG5OMll6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQUQKZ2dFUEFEQ0NBUW9DZ2dFQkFNTnpZOXBrNXJBdlZHL0gwVmxYUlRwc3ZxVGl1WEFmdmFBR3hYa0tFTGJSSlN1UApCYWlibXRhVkJXVVlIWTVkZXgwR1JGcW8raU1kWlcxY1llSkltck5oQ2M3MzNpSmR3V3EwL3NRVDFtWm9lenRQCk5VVDZNSTh0UUs0dmM5SEw5VEZmZ1FCYlZ2MkpqQ3llLzEwY3c0dHlKbzFvQWFzRlZpNnJIU094dlFjdWpubEMKY2xXOTB2R1JFUlV5eFpVVElKZjd3NXcrbnV4em1CeXNBMlNCbHBRV1pNMTZxOWlIWCtQa3pYd2dSRk10NlN6Lwp4cTU1ZlZVVEdLT0FUYWVVTklhb3JNYXhVV1MvT081V08rS3RFZG5lQUhYcEdjM3pHUjE4Zy9xNTBINHdQcWpoClRDc1VaSDl6NkJhT05YREpZTlVxdFRaN2FOQmZqOWJvNm1FL3p6Y0NBd0VBQWFOdU1Hd3dEZ1lEVlIwUEFRSC8KQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBTUJnTlZIUk1CQWY4RQpBakFBTUMwR0ExVWRFUVFtTUNTQ0lteHBibXRsY21RdGNISnZlSGt0YVc1cVpXTjBiM0l1YkdsdWEyVnlaQzV6CmRtTXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBSXNDZ0tNbHNxeGxBblJDRllpVnRPZVlWTUNMU2grWVEyWWwKaTN4cG4ydWp2M2tnRUYyVTB3Q3lOUExsNW1MbzdGOEpDYkpFS3NVYi8rbHF3eCtQdFd1ZkJ1cmdXeUhTb0EwUApyRmRsMlgrNWZSK0x1MUhQMWhpMVpON3NROWpGZ09xTkFTU3Nsb2tjZyt1WFNkT0FuYml2c3V5L1MwTW5LdENFCnNWSnZsbUlHbTV0UDc1MFdrSWxZZlYzN2ZmWlZnUExCejU3eVlOSG9ETktBQThONlRHTHlLajd1ZkVLM25SU2YKekpNVlhMcTZwYVBYSFQ2Wnh5Yk1hMHZvTDdvb01HMWNYOVhFNDVxZzJCZW5RMnVYazdXZ3Z2SzZLVFNlT3AzRApjSDlDTUJWTjRsNGdwalJhckhwdWNxaEJyaFo3Zks3cENJNmdYcytEdXFUaFJYaG9UOUE9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0=
  failurePolicy: Ignore
  admissionReviewVersions: ["v1", "v1beta1"]
  rules:
  - operations: [ "CREATE" ]
    apiGroups: [""]
    apiVersions: ["v1"]
    resources: ["pods", "services"]
  sideEffects: None
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: linkerd-config
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: controller
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.0
data:
  linkerd-crds-chart-version: linkerd-crds-1.0.0-edge
  values: |
    cliVersion: linkerd/cli stable-2.12.0
    clusterDomain: cluster.local
    clusterNetworks: 10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16
    cniEnabled: false
    controlPlaneTracing: false
    controlPlaneTracingNamespace: linkerd-jaeger
    controllerImage: cr.l5d.io/linkerd/controller
    controllerLogFormat: plain
    controllerLogLevel: info
    controllerReplicas: 1
    controllerUID: 2103
    debugContainer:
      image:
        name: cr.l5d.io/linkerd/debug
        pullPolicy: ""
        version: stable-2.12.0
    deploymentStrategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
    destinationProxyResources: null
    destinationResources: null
    disableHeartBeat: false
    enableEndpointSlices: true
    enableH2Upgrade: true
    enablePodAntiAffinity: false
    enablePodDisruptionBudget: false
    heartbeatResources: null
    heartbeatSchedule: ""
    highAvailability: false
    identity:
      issuer:
        clockSkewAllowance: 20s
        externalCA: false
        issuanceLifetime: 24h0m0s
        scheme: linkerd.io/tls
        tls:
          crtPEM: |
            -----BEGIN CERTIFICATE-----
            MIIBiDCCAS6gAwIBAgIBATAKBggqhkjOPQQDAjAcMRowGAYDVQQDExFpZGVudGl0
            eS5saW5rZXJkLjAeFw0yMjA5MDkxMDM5NDVaFw0yMzA5MDkxMDQwMDVaMBwxGjAY
            BgNVBAMTEWlkZW50aXR5LmxpbmtlcmQuMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcD
            QgAELcEulXQtwyY8h6VZKclrl3s9e+WgdWjm5ccZtHiGyEF1N//TKrmv0gUGPDj9
            SA2o9qVWm/BvAoj7NHWWEX3SFaNhMF8wDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQW
            MBQGCCsGAQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQW
            BBR9pMb9yz5qs7ycQTlsuiVxuf///DAKBggqhkjOPQQDAgNIADBFAiEAu/lGpH+i
            uDI6rGDoI0b1YCGbDDIjo2qqWbM7KM0jmeACIHAM/pmxj90qapxbLusnViZNNuGn
            aLF3BMd07ROf/A1a
            -----END CERTIFICATE-----
      serviceAccountTokenProjection: true
    identityProxyResources: null
    identityResources: null
    identityTrustAnchorsPEM: |
      -----BEGIN CERTIFICATE-----
      MIIBiDCCAS6gAwIBAgIBATAKBggqhkjOPQQDAjAcMRowGAYDVQQDExFpZGVudGl0
      eS5saW5rZXJkLjAeFw0yMjA5MDkxMDM5NDVaFw0yMzA5MDkxMDQwMDVaMBwxGjAY
      BgNVBAMTEWlkZW50aXR5LmxpbmtlcmQuMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcD
      QgAELcEulXQtwyY8h6VZKclrl3s9e+WgdWjm5ccZtHiGyEF1N//TKrmv0gUGPDj9
      SA2o9qVWm/BvAoj7NHWWEX3SFaNhMF8wDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQW
      MBQGCCsGAQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQW
      BBR9pMb9yz5qs7ycQTlsuiVxuf///DAKBggqhkjOPQQDAgNIADBFAiEAu/lGpH+i
      uDI6rGDoI0b1YCGbDDIjo2qqWbM7KM0jmeACIHAM/pmxj90qapxbLusnViZNNuGn
      aLF3BMd07ROf/A1a
      -----END CERTIFICATE-----
    identityTrustDomain: cluster.local
    imagePullPolicy: IfNotPresent
    imagePullSecrets: []
    linkerdVersion: stable-2.12.0
    nodeAffinity: null
    nodeSelector:
      kubernetes.io/os: linux
    podAnnotations: {}
    podLabels: {}
    policyController:
      image:
        name: cr.l5d.io/linkerd/policy-controller
        pullPolicy: ""
        version: ""
      logLevel: info
      probeNetworks:
      - 0.0.0.0/0
      resources:
        cpu:
          limit: ""
          request: ""
        ephemeral-storage:
          limit: ""
          request: ""
        memory:
          limit: ""
          request: ""
    policyValidator:
      caBundle: ""
      crtPEM: ""
      externalSecret: false
      injectCaFrom: ""
      injectCaFromSecret: ""
      namespaceSelector:
        matchExpressions:
        - key: config.linkerd.io/admission-webhooks
          operator: NotIn
          values:
          - disabled
    priorityClassName: ""
    profileValidator:
      caBundle: ""
      crtPEM: ""
      externalSecret: false
      injectCaFrom: ""
      injectCaFromSecret: ""
      namespaceSelector:
        matchExpressions:
        - key: config.linkerd.io/admission-webhooks
          operator: NotIn
          values:
          - disabled
    prometheusUrl: ""
    proxy:
      accessLog: ""
      await: true
      capabilities: null
      defaultInboundPolicy: all-unauthenticated
      enableExternalProfiles: false
      image:
        name: cr.l5d.io/linkerd/proxy
        pullPolicy: ""
        version: stable-2.12.0
      inboundConnectTimeout: 100ms
      isGateway: false
      isIngress: false
      logFormat: plain
      logLevel: warn,linkerd=info
      opaquePorts: 25,587,3306,4444,5432,6379,9300,11211
      outboundConnectTimeout: 1000ms
      podInboundPorts: ""
      ports:
        admin: 4191
        control: 4190
        inbound: 4143
        outbound: 4140
      requireIdentityOnInboundPorts: ""
      resources:
        cpu:
          limit: ""
          request: ""
        ephemeral-storage:
          limit: ""
          request: ""
        memory:
          limit: ""
          request: ""
      saMountPath: null
      shutdownGracePeriod: ""
      uid: 2102
      waitBeforeExitSeconds: 0
    proxyContainerName: linkerd-proxy
    proxyInit:
      capabilities: null
      closeWaitTimeoutSecs: 0
      ignoreInboundPorts: 4567,4568
      ignoreOutboundPorts: 4567,4568
      image:
        name: cr.l5d.io/linkerd/proxy-init
        pullPolicy: ""
        version: v2.0.0
      iptablesMode: legacy
      logFormat: ""
      logLevel: ""
      resources:
        cpu:
          limit: 100m
          request: 100m
        ephemeral-storage:
          limit: ""
          request: ""
        memory:
          limit: 20Mi
          request: 20Mi
      runAsRoot: false
      runAsUser: 65534
      saMountPath: null
      skipSubnets: ""
      xtMountPath:
        mountPath: /run
        name: linkerd-proxy-init-xtables-lock
        readOnly: false
    proxyInjector:
      caBundle: ""
      crtPEM: ""
      externalSecret: false
      injectCaFrom: ""
      injectCaFromSecret: ""
      namespaceSelector:
        matchExpressions:
        - key: config.linkerd.io/admission-webhooks
          operator: NotIn
          values:
          - disabled
        - key: kubernetes.io/metadata.name
          operator: NotIn
          values:
          - kube-system
          - cert-manager
    proxyInjectorProxyResources: null
    proxyInjectorResources: null
    tolerations: null
    webhookFailurePolicy: Ignore
---
###
### Identity Controller Service
###
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-identity-issuer
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.0
data:
  crt.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJpRENDQVM2Z0F3SUJBZ0lCQVRBS0JnZ3Foa2pPUFFRREFqQWNNUm93R0FZRFZRUURFeEZwWkdWdWRHbDAKZVM1c2FXNXJaWEprTGpBZUZ3MHlNakE1TURreE1ETTVORFZhRncweU16QTVNRGt4TURRd01EVmFNQnd4R2pBWQpCZ05WQkFNVEVXbGtaVzUwYVhSNUxteHBibXRsY21RdU1Ga3dFd1lIS29aSXpqMENBUVlJS29aSXpqMERBUWNEClFnQUVMY0V1bFhRdHd5WThoNlZaS2NscmwzczllK1dnZFdqbTVjY1p0SGlHeUVGMU4vL1RLcm12MGdVR1BEajkKU0EybzlxVldtL0J2QW9qN05IV1dFWDNTRmFOaE1GOHdEZ1lEVlIwUEFRSC9CQVFEQWdFR01CMEdBMVVkSlFRVwpNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXCkJCUjlwTWI5eXo1cXM3eWNRVGxzdWlWeHVmLy8vREFLQmdncWhrak9QUVFEQWdOSUFEQkZBaUVBdS9sR3BIK2kKdURJNnJHRG9JMGIxWUNHYkRESWpvMnFxV2JNN0tNMGptZUFDSUhBTS9wbXhqOTBxYXB4Ykx1c25WaVpOTnVHbgphTEYzQk1kMDdST2YvQTFhCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0=
  key.pem: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUo4bkJnN2J2dGprVTBWTEYydWI4VkVYZTF3WmVvSC8wQ1RMZjJ5VnducDJvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFTGNFdWxYUXR3eVk4aDZWWktjbHJsM3M5ZStXZ2RXam01Y2NadEhpR3lFRjFOLy9US3JtdgowZ1VHUERqOVNBMm85cVZXbS9CdkFvajdOSFdXRVgzU0ZRPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQ==
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: linkerd-identity-trust-roots
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.0
data:
  ca-bundle.crt: |
    -----BEGIN CERTIFICATE-----
    MIIBiDCCAS6gAwIBAgIBATAKBggqhkjOPQQDAjAcMRowGAYDVQQDExFpZGVudGl0
    eS5saW5rZXJkLjAeFw0yMjA5MDkxMDM5NDVaFw0yMzA5MDkxMDQwMDVaMBwxGjAY
    BgNVBAMTEWlkZW50aXR5LmxpbmtlcmQuMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcD
    QgAELcEulXQtwyY8h6VZKclrl3s9e+WgdWjm5ccZtHiGyEF1N//TKrmv0gUGPDj9
    SA2o9qVWm/BvAoj7NHWWEX3SFaNhMF8wDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQW
    MBQGCCsGAQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQW
    BBR9pMb9yz5qs7ycQTlsuiVxuf///DAKBggqhkjOPQQDAgNIADBFAiEAu/lGpH+i
    uDI6rGDoI0b1YCGbDDIjo2qqWbM7KM0jmeACIHAM/pmxj90qapxbLusnViZNNuGn
    aLF3BMd07ROf/A1a
    -----END CERTIFICATE-----
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-identity
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.0
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: identity
  ports:
  - name: grpc
    port: 8080
    targetPort: 8080
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-identity-headless
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.0
spec:
  clusterIP: None
  selector:
    linkerd.io/control-plane-component: identity
  ports:
  - name: grpc
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.0
  labels:
    app.kubernetes.io/name: identity
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.12.0
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-identity
  namespace: linkerd
spec:
  replicas: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: identity
      linkerd.io/control-plane-ns: linkerd
      linkerd.io/proxy-deployment: linkerd-identity
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      annotations:
        linkerd.io/created-by: linkerd/cli stable-2.12.0
        linkerd.io/proxy-version: stable-2.12.0
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        linkerd.io/trust-root-sha256: b65d2429e1fd4021e8921dc0285f282c037f27718aa8f9b435a74f4b308e3293
        config.linkerd.io/default-inbound-policy: "all-unauthenticated"
      labels:
        linkerd.io/control-plane-component: identity
        linkerd.io/control-plane-ns: linkerd
        linkerd.io/workload-ns: linkerd
        linkerd.io/proxy-deployment: linkerd-identity
    spec:
      nodeSelector:
        kubernetes.io/os: linux
      
      containers:
      - args:
        - identity
        - -log-level=info
        - -log-format=plain
        - -controller-namespace=linkerd
        - -identity-trust-domain=cluster.local
        - -identity-issuance-lifetime=24h0m0s
        - -identity-clock-skew-allowance=20s
        - -identity-scheme=linkerd.io/tls
        - -enable-pprof=false
        env:
        - name: LINKERD_DISABLED
          value: "linkerd-await cannot block the identity controller"
        image: cr.l5d.io/linkerd/controller:stable-2.12.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9990
          initialDelaySeconds: 10
        name: identity
        ports:
        - containerPort: 8080
          name: grpc
        - containerPort: 9990
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9990
        securityContext:
          runAsUser: 2103
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/issuer
          name: identity-issuer
        - mountPath: /var/run/linkerd/identity/trust-roots/
          name: trust-roots
      - env:
        - name: _pod_name
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: _pod_ns
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: _pod_nodeName
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: LINKERD2_PROXY_INBOUND_PORTS_REQUIRE_TLS
          value: "8080"
        - name: LINKERD2_PROXY_LOG
          value: "warn,linkerd=info"
        - name: LINKERD2_PROXY_LOG_FORMAT
          value: "plain"
        - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
          value: linkerd-dst-headless.linkerd.svc.cluster.local.:8086
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_POLICY_SVC_ADDR
          value: linkerd-policy.linkerd.svc.cluster.local.:8090
        - name: LINKERD2_PROXY_POLICY_WORKLOAD
          value: "$(_pod_ns):$(_pod_name)"
        - name: LINKERD2_PROXY_INBOUND_DEFAULT_POLICY
          value: all-unauthenticated
        - name: LINKERD2_PROXY_POLICY_CLUSTER_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_INBOUND_CONNECT_TIMEOUT
          value: "100ms"
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_TIMEOUT
          value: "1000ms"
        - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
          value: 0.0.0.0:4190
        - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
          value: 0.0.0.0:4191
        - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
          value: 127.0.0.1:4140
        - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
          value: 0.0.0.0:4143
        - name: LINKERD2_PROXY_INBOUND_IPS
          valueFrom:
            fieldRef:
              fieldPath: status.podIPs
        - name: LINKERD2_PROXY_INBOUND_PORTS
          value: "8080,9990"
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
          value: svc.cluster.local.
        - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_INBOUND_PORTS_DISABLE_PROTOCOL_DETECTION
          value: "25,587,3306,4444,5432,6379,9300,11211"
        - name: LINKERD2_PROXY_DESTINATION_CONTEXT
          value: |
            {"ns":"$(_pod_ns)", "nodeName":"$(_pod_nodeName)"}
        - name: _pod_sa
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: LINKERD2_PROXY_IDENTITY_DIR
          value: /var/run/linkerd/identity/end-entity
        - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
          valueFrom:
            configMapKeyRef:
              name: linkerd-identity-trust-roots
              key: ca-bundle.crt
        - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
          value: /var/run/secrets/tokens/linkerd-identity-token
        - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
          value: localhost.:8080
        - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
          value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
          value: linkerd-identity.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_POLICY_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        image: cr.l5d.io/linkerd/proxy:stable-2.12.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: 4191
          initialDelaySeconds: 10
        name: linkerd-proxy
        ports:
        - containerPort: 4143
          name: linkerd-proxy
        - containerPort: 4191
          name: linkerd-admin
        readinessProbe:
          httpGet:
            path: /ready
            port: 4191
          initialDelaySeconds: 2
        resources:
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsUser: 2102
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/end-entity
          name: linkerd-identity-end-entity
        - mountPath: /var/run/secrets/tokens
          name: linkerd-identity-token
      initContainers:
      - args:
        - --incoming-proxy-port
        - "4143"
        - --outgoing-proxy-port
        - "4140"
        - --proxy-uid
        - "2102"
        - --inbound-ports-to-ignore
        - "4190,4191,4567,4568"
        - --outbound-ports-to-ignore
        - "443"
        image: cr.l5d.io/linkerd/proxy-init:v2.0.0
        imagePullPolicy: IfNotPresent
        name: linkerd-init
        resources:
          limits:
            cpu: "100m"
            memory: "20Mi"
          requests:
            cpu: "100m"
            memory: "20Mi"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
          privileged: false
          runAsNonRoot: true
          runAsUser: 65534
          readOnlyRootFilesystem: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /run
          name: linkerd-proxy-init-xtables-lock
      serviceAccountName: linkerd-identity
      volumes:
      - name: identity-issuer
        secret:
          secretName: linkerd-identity-issuer
      - configMap:
          name: linkerd-identity-trust-roots
        name: trust-roots
      - emptyDir: {}
        name: linkerd-proxy-init-xtables-lock
      - name: linkerd-identity-token
        projected:
          sources:
          - serviceAccountToken:
              path: linkerd-identity-token
              expirationSeconds: 86400
              audience: identity.l5d.io
      - emptyDir:
          medium: Memory
        name: linkerd-identity-end-entity
---
###
### Destination Controller Service
###
kind: Service
apiVersion: v1
metadata:
  name: linkerd-dst
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.0
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: grpc
    port: 8086
    targetPort: 8086
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-dst-headless
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.0
spec:
  clusterIP: None
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: grpc
    port: 8086
    targetPort: 8086
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-sp-validator
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.0
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: sp-validator
    port: 443
    targetPort: sp-validator
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-policy
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.0
spec:
  clusterIP: None
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: grpc
    port: 8090
    targetPort: 8090
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-policy-validator
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.0
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: policy-https
    port: 443
    targetPort: policy-https
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.0
  labels:
    app.kubernetes.io/name: destination
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.12.0
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-destination
  namespace: linkerd
spec:
  replicas: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: destination
      linkerd.io/control-plane-ns: linkerd
      linkerd.io/proxy-deployment: linkerd-destination
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      annotations:
        linkerd.io/created-by: linkerd/cli stable-2.12.0
        linkerd.io/proxy-version: stable-2.12.0
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        linkerd.io/trust-root-sha256: b65d2429e1fd4021e8921dc0285f282c037f27718aa8f9b435a74f4b308e3293
        config.linkerd.io/default-inbound-policy: "all-unauthenticated"
      labels:
        linkerd.io/control-plane-component: destination
        linkerd.io/control-plane-ns: linkerd
        linkerd.io/workload-ns: linkerd
        linkerd.io/proxy-deployment: linkerd-destination
    spec:
      nodeSelector:
        kubernetes.io/os: linux
      
      containers:
      - env:
        - name: _pod_name
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: _pod_ns
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: _pod_nodeName
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: LINKERD2_PROXY_LOG
          value: "warn,linkerd=info"
        - name: LINKERD2_PROXY_LOG_FORMAT
          value: "plain"
        - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
          value: localhost.:8086
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_POLICY_SVC_ADDR
          value: localhost.:8090
        - name: LINKERD2_PROXY_POLICY_WORKLOAD
          value: "$(_pod_ns):$(_pod_name)"
        - name: LINKERD2_PROXY_INBOUND_DEFAULT_POLICY
          value: all-unauthenticated
        - name: LINKERD2_PROXY_POLICY_CLUSTER_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_INBOUND_CONNECT_TIMEOUT
          value: "100ms"
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_TIMEOUT
          value: "1000ms"
        - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
          value: 0.0.0.0:4190
        - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
          value: 0.0.0.0:4191
        - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
          value: 127.0.0.1:4140
        - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
          value: 0.0.0.0:4143
        - name: LINKERD2_PROXY_INBOUND_IPS
          valueFrom:
            fieldRef:
              fieldPath: status.podIPs
        - name: LINKERD2_PROXY_INBOUND_PORTS
          value: "8086,8090,8443,9443,9990,9996,9997"
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
          value: svc.cluster.local.
        - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_INBOUND_PORTS_DISABLE_PROTOCOL_DETECTION
          value: "25,587,3306,4444,5432,6379,9300,11211"
        - name: LINKERD2_PROXY_DESTINATION_CONTEXT
          value: |
            {"ns":"$(_pod_ns)", "nodeName":"$(_pod_nodeName)"}
        - name: _pod_sa
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: LINKERD2_PROXY_IDENTITY_DIR
          value: /var/run/linkerd/identity/end-entity
        - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
          valueFrom:
            configMapKeyRef:
              name: linkerd-identity-trust-roots
              key: ca-bundle.crt
        - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
          value: /var/run/secrets/tokens/linkerd-identity-token
        - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
          value: linkerd-identity-headless.linkerd.svc.cluster.local.:8080
        - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
          value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
          value: linkerd-identity.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_POLICY_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        image: cr.l5d.io/linkerd/proxy:stable-2.12.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: 4191
          initialDelaySeconds: 10
        name: linkerd-proxy
        ports:
        - containerPort: 4143
          name: linkerd-proxy
        - containerPort: 4191
          name: linkerd-admin
        readinessProbe:
          httpGet:
            path: /ready
            port: 4191
          initialDelaySeconds: 2
        resources:
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsUser: 2102
        terminationMessagePolicy: FallbackToLogsOnError
        lifecycle:
          postStart:
            exec:
              command:
                - /usr/lib/linkerd/linkerd-await
                - --timeout=2m
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/end-entity
          name: linkerd-identity-end-entity
        - mountPath: /var/run/secrets/tokens
          name: linkerd-identity-token
      - args:
        - destination
        - -addr=:8086
        - -controller-namespace=linkerd
        - -enable-h2-upgrade=true
        - -log-level=info
        - -log-format=plain
        - -enable-endpoint-slices=true
        - -cluster-domain=cluster.local
        - -identity-trust-domain=cluster.local
        - -default-opaque-ports=25,587,3306,4444,5432,6379,9300,11211
        - -enable-pprof=false
        image: cr.l5d.io/linkerd/controller:stable-2.12.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9996
          initialDelaySeconds: 10
        name: destination
        ports:
        - containerPort: 8086
          name: grpc
        - containerPort: 9996
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9996
        securityContext:
          runAsUser: 2103
          allowPrivilegeEscalation: false
      - args:
        - sp-validator
        - -log-level=info
        - -log-format=plain
        - -enable-pprof=false
        image: cr.l5d.io/linkerd/controller:stable-2.12.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9997
          initialDelaySeconds: 10
        name: sp-validator
        ports:
        - containerPort: 8443
          name: sp-validator
        - containerPort: 9997
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9997
        securityContext:
          runAsUser: 2103
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/linkerd/tls
          name: sp-tls
          readOnly: true
      - args:
        - --admin-addr=0.0.0.0:9990
        - --control-plane-namespace=linkerd
        - --grpc-addr=0.0.0.0:8090
        - --server-addr=0.0.0.0:9443
        - --server-tls-key=/var/run/linkerd/tls/tls.key
        - --server-tls-certs=/var/run/linkerd/tls/tls.crt
        - --cluster-networks=10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16
        - --identity-domain=cluster.local
        - --default-policy=all-unauthenticated
        - --log-level=info
        - --log-format=plain
        - --probe-networks=0.0.0.0/0
        image: cr.l5d.io/linkerd/policy-controller:stable-2.12.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: admin
        name: policy
        ports:
        - containerPort: 8090
          name: grpc
        - containerPort: 9990
          name: admin
        - containerPort: 9443
          name: policy-https
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: admin
          initialDelaySeconds: 10
        resources:
        securityContext:
          runAsUser: 2103
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/linkerd/tls
          name: policy-tls
          readOnly: true
      initContainers:
      - args:
        - --incoming-proxy-port
        - "4143"
        - --outgoing-proxy-port
        - "4140"
        - --proxy-uid
        - "2102"
        - --inbound-ports-to-ignore
        - "4190,4191,4567,4568"
        - --outbound-ports-to-ignore
        - "443"
        image: cr.l5d.io/linkerd/proxy-init:v2.0.0
        imagePullPolicy: IfNotPresent
        name: linkerd-init
        resources:
          limits:
            cpu: "100m"
            memory: "20Mi"
          requests:
            cpu: "100m"
            memory: "20Mi"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
          privileged: false
          runAsNonRoot: true
          runAsUser: 65534
          readOnlyRootFilesystem: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /run
          name: linkerd-proxy-init-xtables-lock
      serviceAccountName: linkerd-destination
      volumes:
      - name: sp-tls
        secret:
          secretName: linkerd-sp-validator-k8s-tls
      - name: policy-tls
        secret:
          secretName: linkerd-policy-validator-k8s-tls
      - emptyDir: {}
        name: linkerd-proxy-init-xtables-lock
      - name: linkerd-identity-token
        projected:
          sources:
          - serviceAccountToken:
              path: linkerd-identity-token
              expirationSeconds: 86400
              audience: identity.l5d.io
      - emptyDir:
          medium: Memory
        name: linkerd-identity-end-entity
---
###
### Heartbeat
###
apiVersion: batch/v1
kind: CronJob
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    app.kubernetes.io/name: heartbeat
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.12.0
    linkerd.io/control-plane-component: heartbeat
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.0
spec:
  concurrencyPolicy: Replace
  schedule: "49 10 * * *"
  successfulJobsHistoryLimit: 0
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            linkerd.io/control-plane-component: heartbeat
            linkerd.io/workload-ns: linkerd
          annotations:
            linkerd.io/created-by: linkerd/cli stable-2.12.0
        spec:
          nodeSelector:
            kubernetes.io/os: linux
          serviceAccountName: linkerd-heartbeat
          restartPolicy: Never
          containers:
          - name: heartbeat
            image: cr.l5d.io/linkerd/controller:stable-2.12.0
            imagePullPolicy: IfNotPresent
            env:
            - name: LINKERD_DISABLED
              value: "the heartbeat controller does not use the proxy"
            args:
            - "heartbeat"
            - "-controller-namespace=linkerd"
            - "-log-level=info"
            - "-log-format=plain"
            - "-prometheus-url=http://prometheus.linkerd-viz.svc.cluster.local:9090"
            securityContext:
              runAsUser: 2103
              allowPrivilegeEscalation: false
---
###
### Proxy Injector
###
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.0
  labels:
    app.kubernetes.io/name: proxy-injector
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.12.0
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-proxy-injector
  namespace: linkerd
spec:
  replicas: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: proxy-injector
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      annotations:
        linkerd.io/created-by: linkerd/cli stable-2.12.0
        linkerd.io/proxy-version: stable-2.12.0
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        linkerd.io/trust-root-sha256: b65d2429e1fd4021e8921dc0285f282c037f27718aa8f9b435a74f4b308e3293
        config.linkerd.io/opaque-ports: "8443"
        config.linkerd.io/default-inbound-policy: "all-unauthenticated"
      labels:
        linkerd.io/control-plane-component: proxy-injector
        linkerd.io/control-plane-ns: linkerd
        linkerd.io/workload-ns: linkerd
        linkerd.io/proxy-deployment: linkerd-proxy-injector
    spec:
      nodeSelector:
        kubernetes.io/os: linux
      
      containers:
      - env:
        - name: _pod_name
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: _pod_ns
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: _pod_nodeName
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: LINKERD2_PROXY_LOG
          value: "warn,linkerd=info"
        - name: LINKERD2_PROXY_LOG_FORMAT
          value: "plain"
        - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
          value: linkerd-dst-headless.linkerd.svc.cluster.local.:8086
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_POLICY_SVC_ADDR
          value: linkerd-policy.linkerd.svc.cluster.local.:8090
        - name: LINKERD2_PROXY_POLICY_WORKLOAD
          value: "$(_pod_ns):$(_pod_name)"
        - name: LINKERD2_PROXY_INBOUND_DEFAULT_POLICY
          value: all-unauthenticated
        - name: LINKERD2_PROXY_POLICY_CLUSTER_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_INBOUND_CONNECT_TIMEOUT
          value: "100ms"
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_TIMEOUT
          value: "1000ms"
        - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
          value: 0.0.0.0:4190
        - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
          value: 0.0.0.0:4191
        - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
          value: 127.0.0.1:4140
        - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
          value: 0.0.0.0:4143
        - name: LINKERD2_PROXY_INBOUND_IPS
          valueFrom:
            fieldRef:
              fieldPath: status.podIPs
        - name: LINKERD2_PROXY_INBOUND_PORTS
          value: "8443,9995"
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
          value: svc.cluster.local.
        - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_INBOUND_PORTS_DISABLE_PROTOCOL_DETECTION
          value: "25,587,3306,4444,5432,6379,9300,11211"
        - name: LINKERD2_PROXY_DESTINATION_CONTEXT
          value: |
            {"ns":"$(_pod_ns)", "nodeName":"$(_pod_nodeName)"}
        - name: _pod_sa
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: LINKERD2_PROXY_IDENTITY_DIR
          value: /var/run/linkerd/identity/end-entity
        - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
          valueFrom:
            configMapKeyRef:
              name: linkerd-identity-trust-roots
              key: ca-bundle.crt
        - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
          value: /var/run/secrets/tokens/linkerd-identity-token
        - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
          value: linkerd-identity-headless.linkerd.svc.cluster.local.:8080
        - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
          value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
          value: linkerd-identity.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_POLICY_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        image: cr.l5d.io/linkerd/proxy:stable-2.12.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: 4191
          initialDelaySeconds: 10
        name: linkerd-proxy
        ports:
        - containerPort: 4143
          name: linkerd-proxy
        - containerPort: 4191
          name: linkerd-admin
        readinessProbe:
          httpGet:
            path: /ready
            port: 4191
          initialDelaySeconds: 2
        resources:
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsUser: 2102
        terminationMessagePolicy: FallbackToLogsOnError
        lifecycle:
          postStart:
            exec:
              command:
                - /usr/lib/linkerd/linkerd-await
                - --timeout=2m
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/end-entity
          name: linkerd-identity-end-entity
        - mountPath: /var/run/secrets/tokens
          name: linkerd-identity-token
      - args:
        - proxy-injector
        - -log-level=info
        - -log-format=plain
        - -linkerd-namespace=linkerd
        - -enable-pprof=false
        image: cr.l5d.io/linkerd/controller:stable-2.12.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9995
          initialDelaySeconds: 10
        name: proxy-injector
        ports:
        - containerPort: 8443
          name: proxy-injector
        - containerPort: 9995
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9995
        securityContext:
          runAsUser: 2103
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/linkerd/config
          name: config
        - mountPath: /var/run/linkerd/identity/trust-roots
          name: trust-roots
        - mountPath: /var/run/linkerd/tls
          name: tls
          readOnly: true
      initContainers:
      - args:
        - --incoming-proxy-port
        - "4143"
        - --outgoing-proxy-port
        - "4140"
        - --proxy-uid
        - "2102"
        - --inbound-ports-to-ignore
        - "4190,4191,4567,4568"
        - --outbound-ports-to-ignore
        - "4567,4568"
        image: cr.l5d.io/linkerd/proxy-init:v2.0.0
        imagePullPolicy: IfNotPresent
        name: linkerd-init
        resources:
          limits:
            cpu: "100m"
            memory: "20Mi"
          requests:
            cpu: "100m"
            memory: "20Mi"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
          privileged: false
          runAsNonRoot: true
          runAsUser: 65534
          readOnlyRootFilesystem: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /run
          name: linkerd-proxy-init-xtables-lock
      serviceAccountName: linkerd-proxy-injector
      volumes:
      - configMap:
          name: linkerd-config
        name: config
      - configMap:
          name: linkerd-identity-trust-roots
        name: trust-roots
      - name: tls
        secret:
          secretName: linkerd-proxy-injector-k8s-tls
      - emptyDir: {}
        name: linkerd-proxy-init-xtables-lock
      - name: linkerd-identity-token
        projected:
          sources:
          - serviceAccountToken:
              path: linkerd-identity-token
              expirationSeconds: 86400
              audience: identity.l5d.io
      - emptyDir:
          medium: Memory
        name: linkerd-identity-end-entity
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-proxy-injector
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.0
    config.linkerd.io/opaque-ports: "443"
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: proxy-injector
  ports:
  - name: proxy-injector
    port: 443
    targetPort: proxy-injector
---
apiVersion: v1
data:
  linkerd-config-overrides: aWRlbnRpdHk6CiAgaXNzdWVyOgogICAgdGxzOgogICAgICBjcnRQRU06IHwKICAgICAgICAtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KICAgICAgICBNSUlCaURDQ0FTNmdBd0lCQWdJQkFUQUtCZ2dxaGtqT1BRUURBakFjTVJvd0dBWURWUVFERXhGcFpHVnVkR2wwCiAgICAgICAgZVM1c2FXNXJaWEprTGpBZUZ3MHlNakE1TURreE1ETTVORFZhRncweU16QTVNRGt4TURRd01EVmFNQnd4R2pBWQogICAgICAgIEJnTlZCQU1URVdsa1pXNTBhWFI1TG14cGJtdGxjbVF1TUZrd0V3WUhLb1pJemowQ0FRWUlLb1pJemowREFRY0QKICAgICAgICBRZ0FFTGNFdWxYUXR3eVk4aDZWWktjbHJsM3M5ZStXZ2RXam01Y2NadEhpR3lFRjFOLy9US3JtdjBnVUdQRGo5CiAgICAgICAgU0EybzlxVldtL0J2QW9qN05IV1dFWDNTRmFOaE1GOHdEZ1lEVlIwUEFRSC9CQVFEQWdFR01CMEdBMVVkSlFRVwogICAgICAgIE1CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVcKICAgICAgICBCQlI5cE1iOXl6NXFzN3ljUVRsc3VpVnh1Zi8vL0RBS0JnZ3Foa2pPUFFRREFnTklBREJGQWlFQXUvbEdwSCtpCiAgICAgICAgdURJNnJHRG9JMGIxWUNHYkRESWpvMnFxV2JNN0tNMGptZUFDSUhBTS9wbXhqOTBxYXB4Ykx1c25WaVpOTnVHbgogICAgICAgIGFMRjNCTWQwN1JPZi9BMWEKICAgICAgICAtLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCiAgICAgIGtleVBFTTogfAogICAgICAgIC0tLS0tQkVHSU4gRUMgUFJJVkFURSBLRVktLS0tLQogICAgICAgIE1IY0NBUUVFSUo4bkJnN2J2dGprVTBWTEYydWI4VkVYZTF3WmVvSC8wQ1RMZjJ5VnducDJvQW9HQ0NxR1NNNDkKICAgICAgICBBd0VIb1VRRFFnQUVMY0V1bFhRdHd5WThoNlZaS2NscmwzczllK1dnZFdqbTVjY1p0SGlHeUVGMU4vL1RLcm12CiAgICAgICAgMGdVR1BEajlTQTJvOXFWV20vQnZBb2o3TkhXV0VYM1NGUT09CiAgICAgICAgLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQppZGVudGl0eVRydXN0QW5jaG9yc1BFTTogfAogIC0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQogIE1JSUJpRENDQVM2Z0F3SUJBZ0lCQVRBS0JnZ3Foa2pPUFFRREFqQWNNUm93R0FZRFZRUURFeEZwWkdWdWRHbDAKICBlUzVzYVc1clpYSmtMakFlRncweU1qQTVNRGt4TURNNU5EVmFGdzB5TXpBNU1Ea3hNRFF3TURWYU1Cd3hHakFZCiAgQmdOVkJBTVRFV2xrWlc1MGFYUjVMbXhwYm10bGNtUXVNRmt3RXdZSEtvWkl6ajBDQVFZSUtvWkl6ajBEQVFjRAogIFFnQUVMY0V1bFhRdHd5WThoNlZaS2NscmwzczllK1dnZFdqbTVjY1p0SGlHeUVGMU4vL1RLcm12MGdVR1BEajkKICBTQTJvOXFWV20vQnZBb2o3TkhXV0VYM1NGYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0VHTUIwR0ExVWRKUVFXCiAgTUJRR0NDc0dBUVVGQndNQkJnZ3JCZ0VGQlFjREFqQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01CMEdBMVVkRGdRVwogIEJCUjlwTWI5eXo1cXM3eWNRVGxzdWlWeHVmLy8vREFLQmdncWhrak9QUVFEQWdOSUFEQkZBaUVBdS9sR3BIK2kKICB1REk2ckdEb0kwYjFZQ0diRERJam8ycXFXYk03S00wam1lQUNJSEFNL3BteGo5MHFhcHhiTHVzblZpWk5OdUduCiAgYUxGM0JNZDA3Uk9mL0ExYQogIC0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-config-overrides
  namespace: linkerd
