---
###
### Linkerd Namespace
###
kind: Namespace
apiVersion: v1
metadata:
  name: linkerd
  annotations:
    linkerd.io/inject: disabled
  labels:
    linkerd.io/is-control-plane: "true"
    config.linkerd.io/admission-webhooks: disabled
    linkerd.io/control-plane-ns: linkerd
    pod-security.kubernetes.io/enforce: privileged
---
###
### Identity Controller Service RBAC
###
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-identity
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: ["authentication.k8s.io"]
  resources: ["tokenreviews"]
  verbs: ["create"]
# TODO(ver) Restrict this to the Linkerd namespace. See
# https://github.com/linkerd/linkerd2/issues/9367
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create", "patch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-identity
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-linkerd-identity
subjects:
- kind: ServiceAccount
  name: linkerd-identity
  namespace: linkerd
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-identity
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
---
###
### Destination Controller Service
###
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-destination
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: ["apps"]
  resources: ["replicasets"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["batch"]
  resources: ["jobs"]
  verbs: ["list", "get", "watch"]
- apiGroups: [""]
  resources: ["pods", "endpoints", "services", "nodes"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["linkerd.io"]
  resources: ["serviceprofiles"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["discovery.k8s.io"]
  resources: ["endpointslices"]
  verbs: ["list", "get", "watch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-destination
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-linkerd-destination
subjects:
- kind: ServiceAccount
  name: linkerd-destination
  namespace: linkerd
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-destination
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-sp-validator-k8s-tls
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.13.5
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURUVENDQWpXZ0F3SUJBZ0lSQUtJa0pEQ21UblgzUFBybGJGRjB2Zzh3RFFZSktvWklodmNOQVFFTEJRQXcKS3pFcE1DY0dBMVVFQXhNZ2JHbHVhMlZ5WkMxemNDMTJZV3hwWkdGMGIzSXViR2x1YTJWeVpDNXpkbU13SGhjTgpNak13TnpFM01EZ3pORE00V2hjTk1qUXdOekUyTURnek5ETTRXakFyTVNrd0p3WURWUVFERXlCc2FXNXJaWEprCkxYTndMWFpoYkdsa1lYUnZjaTVzYVc1clpYSmtMbk4yWXpDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVAKQURDQ0FRb0NnZ0VCQUp6aDFuTzdRVjNzMHI2UnFndlBNa0cvL0JBeW9hK3VZMTFOQjIrek9jdW53RGFPNFczcQozM0lFb1FpQ0c0Z0E3WXdEaFlrb0tWN0lFU2lKZGxudHRGUnVuQzgvZHJ0Y0orME5iNzR1ZEN1NWJrSHlmQXQ1CmJwSDR0Um1HKzlYYVlzd2JYMVk4dWVzSXJScHVTYlNTdWdra09KU2IvRVVHZ2VwOHVyL3dLMEp0bzFDWXo2TFoKYWE5Tkt6cWRvMDJjV1ZFWWpaV2JvcG8xMUxudzZwRnBkWXJ4UnRTaHNjNkF4a3ZCamVsak1nMVB5SFhZZHMxaApObzhLMFErM2c4ZWlseDM2Mlo4a1RBRHJIeUJJYmc0YkhsNUZiTEwxaFVzWC9Zem93Y2EwT2RKOFc5T2ZWVEFLClFDWWFGTms4ZlFtVCtrZmxhR2ZQQ3p1QVZNTnlyMU1yYzVjQ0F3RUFBYU5zTUdvd0RnWURWUjBQQVFIL0JBUUQKQWdXZ01CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFNQmdOVkhSTUJBZjhFQWpBQQpNQ3NHQTFVZEVRUWtNQ0tDSUd4cGJtdGxjbVF0YzNBdGRtRnNhV1JoZEc5eUxteHBibXRsY21RdWMzWmpNQTBHCkNTcUdTSWIzRFFFQkN3VUFBNElCQVFBL05PN0cxZUxRTTJqelBYV0trV0tGZWlIY0kreTBmVUUzM2d2b1R0N1oKNkdaZk12NStWNmExUDFkOVVzWk40OEFva2dZRVdVeGlTM1JEcWhQb0MwVjRWMnZpRjF2UG5ON2NBZnUvclZvZwpDWkdPalg5MjRWYXJkSFEvdCsrMDV4bU5ETlpjS3dTeHBVRGFrc1p1U1A3dlpWQVZKYUFweUZHY3RzZGpjSzYvCkdpbDRpRWU0cURYTng5Zk1zZk1sbWtIeVRKY0lncVl2NzMvWForN21ETEFmaWVGZXZOV0FKZElVRjhkNFRZQXkKMHc2Z2JUa211Y01hRFAvdWpZNlJOTDBkeTY0dkRUdUFHSTgyaW9ka0FiTW9xeU5uOE1ma1l3Q2RqdUNzNVpCdApsbEVQcERLMDlkcFd2MUdZZnFGVXVSOEVub21iUEt3Y0IzMmtIeVZGWUpHRQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBbk9IV2M3dEJYZXpTdnBHcUM4OHlRYi84RURLaHI2NWpYVTBIYjdNNXk2ZkFObzdoCmJlcmZjZ1NoQ0lJYmlBRHRqQU9GaVNncFhzZ1JLSWwyV2UyMFZHNmNMejkydTF3bjdRMXZ2aTUwSzdsdVFmSjgKQzNsdWtmaTFHWWI3MWRwaXpCdGZWank1NndpdEdtNUp0Sks2Q1NRNGxKdjhSUWFCNm55NnYvQXJRbTJqVUpqUApvdGxwcjAwck9wMmpUWnhaVVJpTmxadWltalhVdWZEcWtXbDFpdkZHMUtHeHpvREdTOEdONldNeURVL0lkZGgyCnpXRTJqd3JSRDdlRHg2S1hIZnJabnlSTUFPc2ZJRWh1RGhzZVhrVnNzdldGU3hmOWpPakJ4clE1MG54YjA1OVYKTUFwQUpob1UyVHg5Q1pQNlIrVm9aODhMTzRCVXczS3ZVeXR6bHdJREFRQUJBb0lCQURSb1NTQ09MRzc0L3duRQpWVjd1ajJaaGdRM1VMQ2twQTI2V25lWlZvL2dCaVBkdzBhUExjMnQrV21FaVBabzRYU0tKeHFFajluWUFOYU1xCkVJeElHUmFmZ0xOVDZ4RDUzeWlVZFlDOXVmY2xVY3piK1U1SCtZVHY1V2VxclJRcWlSaVFDRkFocHlYNTF3SGUKVitibm9SZ09yb3dPYzc2SFJ2MFRQN3VBdXFMTXdYRUVLeXZZZE1OelZVc1gwT2xQUVBaaUFtcWZLaWtnaTVRawp6TjJmOGQrSUpnSlBQOVhmS3JSMVV2bEMxUEQvcUhkdnQ4VXlKQk56V1R0aVZuSGNSSjBHbEtEVXJvU2ZWUUlaCjZxemVEb1cyYTdYVmUyQkpLTmk5RzRkWVdMREl3cE40L2Z0Mzg0RDZ4TU9qS0dyQVNSMzBVYk52alk2NXNvYzMKRzdhWFdjRUNnWUVBemZuNnNjVHBaY3JzU2t1K3ZUMFIwczlQYXd1UzlKUmVQSUlNdndEbGl4R0N0eUttVlBtQwpac3BrcDBoQUtXd0I1TmNtZ0xQRHpSRnhzU1B5anZ1TmJpOVZrT3NPYzNoZVNOU2x1Q3VsZERnWFduZy8yeFNBClpodXF2UGgrMGVUUkhPUVVELzBBVXh1OXpHWUE4N1hXWWRna2c0MkpFYk93KzFKWTVydkFPTGNDZ1lFQXd2dU8KSnppcmMxMWovZlpnWUxtbGtaV3dHaC9YUVVpMUlGckhpNGFqQUoyaVJpK3JZUk5DbGF3NjNsZ0NkemNLY3VWZwo3TDhaUFlGa3V5UGQ2VjdmQnIvYjFrVEdHQWtxY1YyMjFrLytTS3BUYlJnd1h3cEh2S2JEUXBOWXFTRGJUUUw3CnRRY3dub0p2Wkl0U1VIREtRc0hrcytKY3Nkd0NqUlNFbHlUdy9DRUNnWUFrajdmWk1EdkJydGhzZzY5eXhkRlIKR3kxY3Nldys3OHNlY0hNMHdFTCtnWGd6YTdvY29VRnRYNFdvVCtIYnVHbEpwb3NXRTFLeEp1U0liZm9UT1VHcwppa2hrOWVSVnlNcnJvSnRkNnBsdTNMb0FmQkhSb0h6K0l2RVdwQUZXM29majJmUlp0aTRGa29vSkt4NEdKSVBPClVHQ0MzVyswTGJJL21pbGZvM29HVndLQmdGNStiUkVDL014SEdWdU4ySDFuMng2b0RaVkxreFZYZURnNjVuUHYKQnZZWWJ2bFd4dGFmNytmN2RQZ21iT043c0R1b2dJV2J3MDYwYzYzaUh2eW5kcXlkdEp1dDd0YmRNazJJbmtCVQp1aVpiTFYwMG1OU21kY2V1aGZpdzBnbjlHMnJDSkZ4Q0pNVGM3OEVwWi9ZR0EyL0E2ZVpuc0lhZDJqcW5FKzd2Ci96NGhBb0dBWG8yZE5ESlpzMHRyRDFTbmw3aEFkTTJEdFpjZkRjYVphV3FLM2JHZHpUK2VWSjYwRW4wM05ORGYKR3Jnd0xSa3lmL3lVQUZuTkFYMGVFNTA0YmxheGEySzRlRGpKY0ZkVGNodXVIYjhJNGtiWS9yckJ5R1JDWlhFUApGSkhHd2M4Ky85a0RTOXlWYzZEOWJSUmNjSXVGZ3dWVVgrZTZyNDBxZ2s4c1I2dW01V0E9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0t
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: linkerd-sp-validator-webhook-config
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
webhooks:
- name: linkerd-sp-validator.linkerd.io
  namespaceSelector:
    matchExpressions:
    - key: config.linkerd.io/admission-webhooks
      operator: NotIn
      values:
      - disabled
  clientConfig:
    service:
      name: linkerd-sp-validator
      namespace: linkerd
      path: "/"
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURUVENDQWpXZ0F3SUJBZ0lSQUtJa0pEQ21UblgzUFBybGJGRjB2Zzh3RFFZSktvWklodmNOQVFFTEJRQXcKS3pFcE1DY0dBMVVFQXhNZ2JHbHVhMlZ5WkMxemNDMTJZV3hwWkdGMGIzSXViR2x1YTJWeVpDNXpkbU13SGhjTgpNak13TnpFM01EZ3pORE00V2hjTk1qUXdOekUyTURnek5ETTRXakFyTVNrd0p3WURWUVFERXlCc2FXNXJaWEprCkxYTndMWFpoYkdsa1lYUnZjaTVzYVc1clpYSmtMbk4yWXpDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVAKQURDQ0FRb0NnZ0VCQUp6aDFuTzdRVjNzMHI2UnFndlBNa0cvL0JBeW9hK3VZMTFOQjIrek9jdW53RGFPNFczcQozM0lFb1FpQ0c0Z0E3WXdEaFlrb0tWN0lFU2lKZGxudHRGUnVuQzgvZHJ0Y0orME5iNzR1ZEN1NWJrSHlmQXQ1CmJwSDR0Um1HKzlYYVlzd2JYMVk4dWVzSXJScHVTYlNTdWdra09KU2IvRVVHZ2VwOHVyL3dLMEp0bzFDWXo2TFoKYWE5Tkt6cWRvMDJjV1ZFWWpaV2JvcG8xMUxudzZwRnBkWXJ4UnRTaHNjNkF4a3ZCamVsak1nMVB5SFhZZHMxaApObzhLMFErM2c4ZWlseDM2Mlo4a1RBRHJIeUJJYmc0YkhsNUZiTEwxaFVzWC9Zem93Y2EwT2RKOFc5T2ZWVEFLClFDWWFGTms4ZlFtVCtrZmxhR2ZQQ3p1QVZNTnlyMU1yYzVjQ0F3RUFBYU5zTUdvd0RnWURWUjBQQVFIL0JBUUQKQWdXZ01CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFNQmdOVkhSTUJBZjhFQWpBQQpNQ3NHQTFVZEVRUWtNQ0tDSUd4cGJtdGxjbVF0YzNBdGRtRnNhV1JoZEc5eUxteHBibXRsY21RdWMzWmpNQTBHCkNTcUdTSWIzRFFFQkN3VUFBNElCQVFBL05PN0cxZUxRTTJqelBYV0trV0tGZWlIY0kreTBmVUUzM2d2b1R0N1oKNkdaZk12NStWNmExUDFkOVVzWk40OEFva2dZRVdVeGlTM1JEcWhQb0MwVjRWMnZpRjF2UG5ON2NBZnUvclZvZwpDWkdPalg5MjRWYXJkSFEvdCsrMDV4bU5ETlpjS3dTeHBVRGFrc1p1U1A3dlpWQVZKYUFweUZHY3RzZGpjSzYvCkdpbDRpRWU0cURYTng5Zk1zZk1sbWtIeVRKY0lncVl2NzMvWForN21ETEFmaWVGZXZOV0FKZElVRjhkNFRZQXkKMHc2Z2JUa211Y01hRFAvdWpZNlJOTDBkeTY0dkRUdUFHSTgyaW9ka0FiTW9xeU5uOE1ma1l3Q2RqdUNzNVpCdApsbEVQcERLMDlkcFd2MUdZZnFGVXVSOEVub21iUEt3Y0IzMmtIeVZGWUpHRQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t
  failurePolicy: Ignore
  admissionReviewVersions: ["v1", "v1beta1"]
  rules:
  - operations: ["CREATE", "UPDATE"]
    apiGroups: ["linkerd.io"]
    apiVersions: ["v1alpha1", "v1alpha2"]
    resources: ["serviceprofiles"]
  sideEffects: None
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-policy-validator-k8s-tls
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.13.5
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURXVENDQWtHZ0F3SUJBZ0lSQUtWVVFMSWpBVVFrRzkzZzB3aVQxcHN3RFFZSktvWklodmNOQVFFTEJRQXcKTHpFdE1Dc0dBMVVFQXhNa2JHbHVhMlZ5WkMxd2IyeHBZM2t0ZG1Gc2FXUmhkRzl5TG14cGJtdGxjbVF1YzNaagpNQjRYRFRJek1EY3hOekE0TXpRek9Gb1hEVEkwTURjeE5qQTRNelF6T0Zvd0x6RXRNQ3NHQTFVRUF4TWtiR2x1CmEyVnlaQzF3YjJ4cFkza3RkbUZzYVdSaGRHOXlMbXhwYm10bGNtUXVjM1pqTUlJQklqQU5CZ2txaGtpRzl3MEIKQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBb2p1bGg4RW5DcjE4cjNaRFFtQ0drUWJ1QWtDYWF6R05lYUdVTVVQbgpxd0kvUTgycWcvNUtHMDZHTDlRWUtnTGVBYzRJb1dYWmQ1WHNVcldrWk9UdVc1cDhaZVNtakpvRGxVYkxDTTNLCkYwd2dzUkdXNXN6OWx0eFR3bnVMU0d3dFIwTmFHTnZlRG9CS0ZPaitQRzIrTEhSanpxaHVTUE1NWEcrRXFWTy8KcGVKODNETkw3cE5ZSjBYVHFlVGhESTJQZFlKRzljT1hEYll4S3JqbmxCMWFIOWRLQUpvYXRMa3phSjRHRm1LZwp5dExiczhFclNXMHhNanR5Z2o0ZHBTWUs5dEVGcno4WVB0Ny84cGJ4UHlaaklzaXc1ZVV6TUpPSldCRHRVeUY4Cm5nekFRUE93K0UyMnZCei90OEJsRnY3eGJVdThicWo4aFJKTFh2dGVHOWRXeXdJREFRQUJvM0F3YmpBT0JnTlYKSFE4QkFmOEVCQU1DQmFBd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQXdHQTFVZApFd0VCL3dRQ01BQXdMd1lEVlIwUkJDZ3dKb0lrYkdsdWEyVnlaQzF3YjJ4cFkza3RkbUZzYVdSaGRHOXlMbXhwCmJtdGxjbVF1YzNaak1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQW9jai8yeU0zdTNTV2V0b0xtTnBCZGhjTHEKSmdkT3JUUjNzK0l0QWpRQUtLcVJjREhLUEluaHdzU3dBU3p3NmcxZEU1ZWN0OGZaVXJKc1U5WGRidU9MK1RRdwpkcFE5UU84S3ZXQ1pJTy9RaWVtcmpOUVVUaVlKVGdwcGZZWnMzemVyM2NrdTE0QktZNDIwYXVMUEFLd0duVldECjV3akVqNml6dk9BS2hHNW02cEw1eW9FcWFyMGRCQ0hXZHhMekgwZlp2VWk3TWFsNktPUEkrUDBiY2xNa1RmcloKQlpWQVZneHlGeitPOG85RFBuSk1HUVM1aGxUakVGU3V0V1c3WDRGcjAyNEs0U1o0QTd2UExLcGVtM1FhcG0yMQp1OW1QR1AzWkhSWWM3ZEkySFhDNVgrK3A2cldCNGdqNWtmRERGMU9QWllqLzBzMVRDVjhXdUdnL1FjczMKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBb2p1bGg4RW5DcjE4cjNaRFFtQ0drUWJ1QWtDYWF6R05lYUdVTVVQbnF3SS9RODJxCmcvNUtHMDZHTDlRWUtnTGVBYzRJb1dYWmQ1WHNVcldrWk9UdVc1cDhaZVNtakpvRGxVYkxDTTNLRjB3Z3NSR1cKNXN6OWx0eFR3bnVMU0d3dFIwTmFHTnZlRG9CS0ZPaitQRzIrTEhSanpxaHVTUE1NWEcrRXFWTy9wZUo4M0ROTAo3cE5ZSjBYVHFlVGhESTJQZFlKRzljT1hEYll4S3JqbmxCMWFIOWRLQUpvYXRMa3phSjRHRm1LZ3l0TGJzOEVyClNXMHhNanR5Z2o0ZHBTWUs5dEVGcno4WVB0Ny84cGJ4UHlaaklzaXc1ZVV6TUpPSldCRHRVeUY4bmd6QVFQT3cKK0UyMnZCei90OEJsRnY3eGJVdThicWo4aFJKTFh2dGVHOWRXeXdJREFRQUJBb0lCQUJXN1hib29zcDBxc3VnaQpOSEpRMGRYZGtzWjBkdnNEQVV1WXpHd3BCNENONVlHa3JFSFFMNGNtNXF6RGdaVW5HeXdzdUZVK2Vub2RlREhBCktVeG1xbE5WQjNMeXhTaXlmT1pqUEZGcWw3YTFPTy9mUmxLV2hTWFBUOTBPaGFMbThzM0lCT3F0a1RwcUR3SnMKRDVweXJQWHhoV2txZ05OKzAxb1NpamZRZ3l5cVNxd3V4c3ZDaUIrVTlDb1AvRXozVVpPWW5xWlp4TGF3V05EWApwL0E0QUltUEp2a3JMOURtVjNIandnVnZGOEJ2YVF5Z01Gc2haK0tjTGlyQ21iQzJIc3lRT0hDdjYyc2FhOUdtCm0wVEtoU21uSzljNHhPeEFMUEtPdG1vSDFZeDhSNFBxUjlXaG0zcEVNZEI2OGdBb3o4WGwvTmhKZDFRN1lmbjYKYUMvZFRWa0NnWUVBeS8rQ2huS3hUMytjNE15Vm04TUZkN3hCSUFtVk9JOFA2Qk9VZTljZ2xvUjI4S0FkVUJodwpsYlR2Z3RaWmp5ajBPeWEvZzIvd0t0d2psZmhneURxUlBSNnVoS21CTkRBb3lDK0tnQURKa04zdzRnL2hKOUNjCmZQV3ZHb20ySG1MWFcycHB3NmlaMEl6RTU5SnRMOGlMVTFmbkQwcVQxcjg4Sk5lQmpSblFFSGNDZ1lFQXk1YWkKUjM2enM0REI4bGJSSzRvNGYzTTBqQ3N2VE9YSjJMcS9nTFZSNUFSYyt1cXNwTzYrdEx0ZnlDNFJ1V0NURmx1dwpha0RYRW1pRlRxeW82MHJOUmVoQ2pTQnhPWTR0VDhKSExJZW1LVTdWMXYxT2JidU9KdnlJejlIbDJyeSttQkUrCnE4cFBTdEpOY29rK1FjaTZJU3NmODlqZVhiMlhyc0dyUkpBa2RVMENnWUJFOE1DbnR6TDg3dCtSaVJJMlpaMy8KYlB1RlhEZTF1WU5pcHR0VFRzeVFrWXV3bml2SjJiaVNuMmNpREZhUDd3TTZ5a21HbmRuSVlrVVVkYkFmZXN1QwpvRS9TUFlhUW9JWG53VWxKSVByOW5rTzk0aWZ4VUtyU0FDV0JEbkVocTcya0F6NWpCU09XT3p5QUs3a0NvUCtVCjF1d2JXdFREaWpWRkxoOTJFL2NnMlFLQmdCRnEvdEZORnNUSnhFNGVmV0RUUDRndjdCUDk4ZHNMWWR5SUJiQlcKVXY1R0hVcGVYNHp3M0NJTVVlS0hobjZzczRqYktWbTkyR2k3eG9QM283QVZ3MEF5NGRhL0t0QzR5RW1sbm45Qgp6OGFDOXlxZ20yQXFCcnh4S0tkWEZ1cEM4YStDOGpDeWExeEVaOW5md2hMUXdKUHI0NXp5TmZ3aEoyUU5MOEQ2CjhCT1ZBb0dCQUk3cGFBSGs0clNpM00zUjdMNTAyNXo3L0xyTVBhb3AvK1hWRDVyMTFUcnUzZGZBY2puMy90QUcKUjEvVWFaMlRMK3VsQUV6VExFcGROQ2JybWMxWmNzVWh3VlIxN3NPamoxNzI0dlZPUERkQlNvam5GbXFxQmZ6Swp1d1BRdTdtMWZiaHpRc0RjOTlydEhmdUpINmJ1R3R3UGd4LzlBektlMWxXQ3Jxd3FzL2M3Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0t
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: linkerd-policy-validator-webhook-config
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
webhooks:
- name: linkerd-policy-validator.linkerd.io
  namespaceSelector:
    matchExpressions:
    - key: config.linkerd.io/admission-webhooks
      operator: NotIn
      values:
      - disabled
  clientConfig:
    service:
      name: linkerd-policy-validator
      namespace: linkerd
      path: "/"
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURXVENDQWtHZ0F3SUJBZ0lSQUtWVVFMSWpBVVFrRzkzZzB3aVQxcHN3RFFZSktvWklodmNOQVFFTEJRQXcKTHpFdE1Dc0dBMVVFQXhNa2JHbHVhMlZ5WkMxd2IyeHBZM2t0ZG1Gc2FXUmhkRzl5TG14cGJtdGxjbVF1YzNaagpNQjRYRFRJek1EY3hOekE0TXpRek9Gb1hEVEkwTURjeE5qQTRNelF6T0Zvd0x6RXRNQ3NHQTFVRUF4TWtiR2x1CmEyVnlaQzF3YjJ4cFkza3RkbUZzYVdSaGRHOXlMbXhwYm10bGNtUXVjM1pqTUlJQklqQU5CZ2txaGtpRzl3MEIKQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBb2p1bGg4RW5DcjE4cjNaRFFtQ0drUWJ1QWtDYWF6R05lYUdVTVVQbgpxd0kvUTgycWcvNUtHMDZHTDlRWUtnTGVBYzRJb1dYWmQ1WHNVcldrWk9UdVc1cDhaZVNtakpvRGxVYkxDTTNLCkYwd2dzUkdXNXN6OWx0eFR3bnVMU0d3dFIwTmFHTnZlRG9CS0ZPaitQRzIrTEhSanpxaHVTUE1NWEcrRXFWTy8KcGVKODNETkw3cE5ZSjBYVHFlVGhESTJQZFlKRzljT1hEYll4S3JqbmxCMWFIOWRLQUpvYXRMa3phSjRHRm1LZwp5dExiczhFclNXMHhNanR5Z2o0ZHBTWUs5dEVGcno4WVB0Ny84cGJ4UHlaaklzaXc1ZVV6TUpPSldCRHRVeUY4Cm5nekFRUE93K0UyMnZCei90OEJsRnY3eGJVdThicWo4aFJKTFh2dGVHOWRXeXdJREFRQUJvM0F3YmpBT0JnTlYKSFE4QkFmOEVCQU1DQmFBd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQXdHQTFVZApFd0VCL3dRQ01BQXdMd1lEVlIwUkJDZ3dKb0lrYkdsdWEyVnlaQzF3YjJ4cFkza3RkbUZzYVdSaGRHOXlMbXhwCmJtdGxjbVF1YzNaak1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQW9jai8yeU0zdTNTV2V0b0xtTnBCZGhjTHEKSmdkT3JUUjNzK0l0QWpRQUtLcVJjREhLUEluaHdzU3dBU3p3NmcxZEU1ZWN0OGZaVXJKc1U5WGRidU9MK1RRdwpkcFE5UU84S3ZXQ1pJTy9RaWVtcmpOUVVUaVlKVGdwcGZZWnMzemVyM2NrdTE0QktZNDIwYXVMUEFLd0duVldECjV3akVqNml6dk9BS2hHNW02cEw1eW9FcWFyMGRCQ0hXZHhMekgwZlp2VWk3TWFsNktPUEkrUDBiY2xNa1RmcloKQlpWQVZneHlGeitPOG85RFBuSk1HUVM1aGxUakVGU3V0V1c3WDRGcjAyNEs0U1o0QTd2UExLcGVtM1FhcG0yMQp1OW1QR1AzWkhSWWM3ZEkySFhDNVgrK3A2cldCNGdqNWtmRERGMU9QWllqLzBzMVRDVjhXdUdnL1FjczMKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ==
  failurePolicy: Ignore
  admissionReviewVersions: ["v1", "v1beta1"]
  rules:
  - operations: ["CREATE", "UPDATE"]
    apiGroups: ["policy.linkerd.io"]
    apiVersions: ["v1alpha1", "v1beta1"]
    resources:
    - authorizationpolicies
    - httproutes
    - networkauthentications
    - meshtlsauthentications
    - serverauthorizations
    - servers
  sideEffects: None
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: linkerd-policy
  labels:
    app.kubernetes.io/part-of: Linkerd
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
rules:
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - apps
    resources:
      - deployments
    verbs:
      - get
  - apiGroups:
      - policy.linkerd.io
    resources:
      - authorizationpolicies
      - httproutes
      - meshtlsauthentications
      - networkauthentications
      - servers
      - serverauthorizations
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - policy.linkerd.io
    resources:
      - httproutes/status
    verbs:
      - patch
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - create
      - get
      - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: linkerd-destination-policy
  labels:
    app.kubernetes.io/part-of: Linkerd
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-policy
subjects:
  - kind: ServiceAccount
    name: linkerd-destination
    namespace: linkerd
---
###
### Heartbeat RBAC
###
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get"]
  resourceNames: ["linkerd-config"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    linkerd.io/control-plane-ns: linkerd
roleRef:
  kind: Role
  name: linkerd-heartbeat
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: linkerd-heartbeat
  namespace: linkerd
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: linkerd-heartbeat
  labels:
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: [""]
  resources: ["namespaces"]
  verbs: ["list"]
- apiGroups: ["linkerd.io"]
  resources: ["serviceprofiles"]
  verbs: ["list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: linkerd-heartbeat
  labels:
    linkerd.io/control-plane-ns: linkerd
roleRef:
  kind: ClusterRole
  name: linkerd-heartbeat
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: linkerd-heartbeat
  namespace: linkerd
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: heartbeat
    linkerd.io/control-plane-ns: linkerd

---
###
### Proxy Injector RBAC
###
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-proxy-injector
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create", "patch"]
- apiGroups: [""]
  resources: ["namespaces", "replicationcontrollers"]
  verbs: ["list", "get", "watch"]
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["list", "watch"]
- apiGroups: ["extensions", "apps"]
  resources: ["deployments", "replicasets", "daemonsets", "statefulsets"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["extensions", "batch"]
  resources: ["cronjobs", "jobs"]
  verbs: ["list", "get", "watch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-proxy-injector
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
subjects:
- kind: ServiceAccount
  name: linkerd-proxy-injector
  namespace: linkerd
  apiGroup: ""
roleRef:
  kind: ClusterRole
  name: linkerd-linkerd-proxy-injector
  apiGroup: rbac.authorization.k8s.io
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-proxy-injector
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-proxy-injector-k8s-tls
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.13.5
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURVakNDQWpxZ0F3SUJBZ0lRSy9PMElqeGhDdU9LWisyRjd2K2RxekFOQmdrcWhraUc5dzBCQVFzRkFEQXQKTVNzd0tRWURWUVFERXlKc2FXNXJaWEprTFhCeWIzaDVMV2x1YW1WamRHOXlMbXhwYm10bGNtUXVjM1pqTUI0WApEVEl6TURjeE56QTRNelF6T0ZvWERUSTBNRGN4TmpBNE16UXpPRm93TFRFck1Da0dBMVVFQXhNaWJHbHVhMlZ5ClpDMXdjbTk0ZVMxcGJtcGxZM1J2Y2k1c2FXNXJaWEprTG5OMll6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQUQKZ2dFUEFEQ0NBUW9DZ2dFQkFOVTNGUStUUzNjNml0R1V1SyswZDFmVFRFQTlhTzYzclZzZDNaeGlLeFd6REYwcQpGTStVRzF1anY0K3pDVnpsY2FSSkxqaFptV0JSaWxqNW5pam5yeHp1MEcrVGkyM2h4b3VDSEtSaEVzNjE2Q2x1CnVKcVI4R1E1a3p1Tk1zQ2p6UWJlNUQ4eGZTNHVzakFQbWMwcVNTYm5BaVRmM1VVUnNGZGVRc2pHYkp2Ynk3WjUKMWlHc2VGeS9jSlR0M3d5aW5MVVFseXd4K0ppV0NCMFY0NEZOVXBYV1N1N0pRSmtBZlc0K2dmUFU4U0JPaDlGaApPYUxtZnU0UlJxRWp5MXRCbzQyT2wwRC9iMnJOUkowK0J2MkF1ZDNJYTN3Uy9PZzMzbXowL2VxaUtrbytzUTZKCm1oQ3ZlZ0lpcWc2eTRmK0FISkk4ZjFrREJGUlIydUY2QjljdTM4TUNBd0VBQWFOdU1Hd3dEZ1lEVlIwUEFRSC8KQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBTUJnTlZIUk1CQWY4RQpBakFBTUMwR0ExVWRFUVFtTUNTQ0lteHBibXRsY21RdGNISnZlSGt0YVc1cVpXTjBiM0l1YkdsdWEyVnlaQzV6CmRtTXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBSmJSR0NOd0V1SzM0RmJCc0F4dDZOdnZVWHNmK1NRajJGS2wKQlQ5SmlVa0t4MnBzZ0E1MU9DOWFvMmYzVWhFdEM0MWlTNE94clY1Yk4wV0tjYXF6TVd6NnNBRGhtR2Q0R3BBNwpDbFJ4NHJVN0pnR09SWll5S0hIWFNwYVF6SkN2RTNLYjkxZ3Y3V2JlN0VoSk5QNG95R2crVzJPekxNOHg0QUk4CnNDUGV5dTBkdDFxVFRsQkw2TkpSYU5mblp0RmlBeDBuZzZzVkwzZlR0TGpLdHZPN3hVbzMzMFBhVk1vQ1FGYkQKMjJjWVFGRk5JYS81d05kNDMyc1poM0R1Qml0QlRveWd1bFRRcnNKREpOY3Y1ajA0YURNTDRSaHdjT3c0bzRaRApQTkdCVWk1blN0aU9kMlBSYnB1VkY5cnptdW84TENEL3hBbHBiVGVSWWlrTjYvcVdxM0U9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBMVRjVkQ1TkxkenFLMFpTNHI3UjNWOU5NUUQxbzdyZXRXeDNkbkdJckZiTU1YU29VCno1UWJXNk8vajdNSlhPVnhwRWt1T0ZtWllGR0tXUG1lS09ldkhPN1FiNU9MYmVIR2k0SWNwR0VTenJYb0tXNjQKbXBId1pEbVRPNDB5d0tQTkJ0N2tQekY5TGk2eU1BK1p6U3BKSnVjQ0pOL2RSUkd3VjE1Q3lNWnNtOXZMdG5uVwpJYXg0WEw5d2xPM2ZES0tjdFJDWExESDRtSllJSFJYamdVMVNsZFpLN3NsQW1RQjliajZCODlUeElFNkgwV0U1Cm91Wis3aEZHb1NQTFcwR2pqWTZYUVA5dmFzMUVuVDRHL1lDNTNjaHJmQkw4NkRmZWJQVDk2cUlxU2o2eERvbWEKRUs5NkFpS3FEckxoLzRBY2tqeC9XUU1FVkZIYTRYb0gxeTdmd3dJREFRQUJBb0lCQUM2WU5RQU1YbWVWNFpSZgpmZVRYK1dTMkJtbmJnYno1WXVjUXBjZHhKSjAvWGFwV2NlblRJZzlxdjRnMXhnd0pFRWFvdjNNTkVabWMrRER0CmpBVEFiT0pUeGpVNzl6SnlMcU42TWF3eWtwdWQ0VGg4dTliN29aOGxmZWw3dCtXbFpqN2tJdGswaFhpOE43Q04KR0QxZnlsQzRGeDNiMWswcnltK3RaOGJjcGd1QkhOVE15d2FZZ290QzQ0TTMvdVp4ZDZoVnZ6dk91aSt1N0p3dwppUjE2dTdMVFhYa0FwZkpjc1VHMTQwVVVBOWRyOEhsZHI2ZndLREZWOTBYWHU3WHBPNlp1YVVBS1NTNzRNbGlhCjV4Vk95VXdVYnJwbzNGMzBJSGRwSG1BR0g5RWFxNit4Y3FiL0p6blNJVGZCcExTWlgwU1BybVdNSDA0dXN6VGUKNWtscTB2RUNnWUVBODlKUU15NEV4VEtlaGNlUDZOK2t5RHVHbktySTlSSVhMYVZ0N05kN2ZHZmRrQlJmeG1HUQpwbm9wMjdrZnowNlUydTlJc0Z4aEQ1Rm43Ymd3aHJMcDB6WlZlZS9KR2FGcFlSOUQ4ZmJoMzRzMzRnSE1BWWtzCjR2ODhldFlra0c2RFUwd3BtQnUwTElyNEJlZCt1b1k0bU96cTVLaWdTSXNkL0RHektEVFcxM2NDZ1lFQTM5MXAKcXB6dmtqVTRrYi9CWU1XaVQydDI1V3Zqei9lNnFCT3VUYlplejNkejg3azhEeGdKbzdlM0x2UG1zeVpZK2NHaAorVCtwSldmcmI4cjVkZlpMajBoK1MzOUQrQ3cvYjhzWjhMTnZPVjA1QWpBSWxlK3M0ZnZDZldsSFgxQ2ZnT1RzCm1tSXk3S09tYkJDUElLMVVLLzFzYjAyakdrUUFRa3FqOWkrdEpSVUNnWUJZL3EzNVVGVzdhTE9GM3daL0dJcDcKNzRZOXp2U1V4eXFncFo1TzhZUUlMNTBtaHRsQ2ZzQWVrNzZOamErM3FsWVk1M2dmcjBoYU4xZTQ1QjhLTzJtdgpoMGlCdm0wbnBzdmhBRmw3aXdKODVzTGFBby9sQzUzUHFSdjVOZ3FZa1UzcjdJUE9HbWFVVDVFaURwSXFJTzJ0Cm0rUk0yK1BOTnNJV0dFbnRaZ1A1RndLQmdRQ2VMMUVzS3NxcVVJc1JpaUwxNDVFR2Q1UkRGdEthTUoybmlJaWgKQngzRmtjM1FTWEtqNDhOaitUd3FwRk8vQVhqYnVyUmVjRnB3UVJjL0hualpudGpUZlZFb3ZkdmtjRGUvSWcvSgpZckZVSW9oWEFHUUF0cVE5NXUwT095Y2d0ZEtQZkxPbmYzNG1jcGoxUVZveHAraVRVUGFmUzRmVjFua3NYcHV2CktRODY1UUtCZ1FESEhyYlhRRm9hOC9jUjNGQ1l3SDFodFBjNUF0OGVqdURUQmpmWW8zZjdoSks1cnFWaDVaeEUKWlNmUE56SFVvVWM2WSthN3V2ZGF2Q3pPV2pOZzlDQ3k2N3BQNHJMQk5kZ2p4R0cxUG5rSXIvZEhudnFFVXRLUwpMTjdrdEQ4S0VNbHQ3VFNpRlVwZStEMEQ0MjFaTGZydE9HTlpUK3U3YnZEbkdrSUk0bWFOS0E9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQ==
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: linkerd-proxy-injector-webhook-config
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
webhooks:
- name: linkerd-proxy-injector.linkerd.io
  namespaceSelector:
    matchExpressions:
    - key: config.linkerd.io/admission-webhooks
      operator: NotIn
      values:
      - disabled
    - key: kubernetes.io/metadata.name
      operator: NotIn
      values:
      - kube-system
      - cert-manager
  objectSelector:
    null
  clientConfig:
    service:
      name: linkerd-proxy-injector
      namespace: linkerd
      path: "/"
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURVakNDQWpxZ0F3SUJBZ0lRSy9PMElqeGhDdU9LWisyRjd2K2RxekFOQmdrcWhraUc5dzBCQVFzRkFEQXQKTVNzd0tRWURWUVFERXlKc2FXNXJaWEprTFhCeWIzaDVMV2x1YW1WamRHOXlMbXhwYm10bGNtUXVjM1pqTUI0WApEVEl6TURjeE56QTRNelF6T0ZvWERUSTBNRGN4TmpBNE16UXpPRm93TFRFck1Da0dBMVVFQXhNaWJHbHVhMlZ5ClpDMXdjbTk0ZVMxcGJtcGxZM1J2Y2k1c2FXNXJaWEprTG5OMll6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQUQKZ2dFUEFEQ0NBUW9DZ2dFQkFOVTNGUStUUzNjNml0R1V1SyswZDFmVFRFQTlhTzYzclZzZDNaeGlLeFd6REYwcQpGTStVRzF1anY0K3pDVnpsY2FSSkxqaFptV0JSaWxqNW5pam5yeHp1MEcrVGkyM2h4b3VDSEtSaEVzNjE2Q2x1CnVKcVI4R1E1a3p1Tk1zQ2p6UWJlNUQ4eGZTNHVzakFQbWMwcVNTYm5BaVRmM1VVUnNGZGVRc2pHYkp2Ynk3WjUKMWlHc2VGeS9jSlR0M3d5aW5MVVFseXd4K0ppV0NCMFY0NEZOVXBYV1N1N0pRSmtBZlc0K2dmUFU4U0JPaDlGaApPYUxtZnU0UlJxRWp5MXRCbzQyT2wwRC9iMnJOUkowK0J2MkF1ZDNJYTN3Uy9PZzMzbXowL2VxaUtrbytzUTZKCm1oQ3ZlZ0lpcWc2eTRmK0FISkk4ZjFrREJGUlIydUY2QjljdTM4TUNBd0VBQWFOdU1Hd3dEZ1lEVlIwUEFRSC8KQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBTUJnTlZIUk1CQWY4RQpBakFBTUMwR0ExVWRFUVFtTUNTQ0lteHBibXRsY21RdGNISnZlSGt0YVc1cVpXTjBiM0l1YkdsdWEyVnlaQzV6CmRtTXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBSmJSR0NOd0V1SzM0RmJCc0F4dDZOdnZVWHNmK1NRajJGS2wKQlQ5SmlVa0t4MnBzZ0E1MU9DOWFvMmYzVWhFdEM0MWlTNE94clY1Yk4wV0tjYXF6TVd6NnNBRGhtR2Q0R3BBNwpDbFJ4NHJVN0pnR09SWll5S0hIWFNwYVF6SkN2RTNLYjkxZ3Y3V2JlN0VoSk5QNG95R2crVzJPekxNOHg0QUk4CnNDUGV5dTBkdDFxVFRsQkw2TkpSYU5mblp0RmlBeDBuZzZzVkwzZlR0TGpLdHZPN3hVbzMzMFBhVk1vQ1FGYkQKMjJjWVFGRk5JYS81d05kNDMyc1poM0R1Qml0QlRveWd1bFRRcnNKREpOY3Y1ajA0YURNTDRSaHdjT3c0bzRaRApQTkdCVWk1blN0aU9kMlBSYnB1VkY5cnptdW84TENEL3hBbHBiVGVSWWlrTjYvcVdxM0U9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0=
  failurePolicy: Ignore
  admissionReviewVersions: ["v1", "v1beta1"]
  rules:
  - operations: [ "CREATE" ]
    apiGroups: [""]
    apiVersions: ["v1"]
    resources: ["pods", "services"]
  sideEffects: None
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: linkerd-config
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: controller
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.13.5
data:
  linkerd-crds-chart-version: linkerd-crds-1.0.0-edge
  values: |
    cliVersion: linkerd/cli stable-2.13.5
    clusterDomain: cluster.local
    clusterNetworks: 10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16
    cniEnabled: false
    controlPlaneTracing: false
    controlPlaneTracingNamespace: linkerd-jaeger
    controllerImage: cr.l5d.io/linkerd/controller
    controllerLogFormat: plain
    controllerLogLevel: info
    controllerReplicas: 1
    controllerUID: 2103
    debugContainer:
      image:
        name: cr.l5d.io/linkerd/debug
        pullPolicy: ""
        version: stable-2.13.5
    deploymentStrategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
    destinationProxyResources: null
    destinationResources: null
    disableHeartBeat: false
    enableEndpointSlices: true
    enableH2Upgrade: true
    enablePodAntiAffinity: false
    enablePodDisruptionBudget: false
    heartbeatResources: null
    heartbeatSchedule: ""
    highAvailability: false
    identity:
      externalCA: false
      issuer:
        clockSkewAllowance: 20s
        issuanceLifetime: 24h0m0s
        scheme: linkerd.io/tls
        tls:
          crtPEM: |
            -----BEGIN CERTIFICATE-----
            MIIBiTCCAS6gAwIBAgIBATAKBggqhkjOPQQDAjAcMRowGAYDVQQDExFpZGVudGl0
            eS5saW5rZXJkLjAeFw0yMzA3MTcwODM0MjhaFw0yNDA3MTYwODM0NDhaMBwxGjAY
            BgNVBAMTEWlkZW50aXR5LmxpbmtlcmQuMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcD
            QgAEtaB14tYhzT+jaGz7BB3Wz5RrAIzmTYPSqsw5eCPCKjHwlyDeF2RFogMYMWh3
            NaCYhlovdcAAJHL6un2GT02HBaNhMF8wDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQW
            MBQGCCsGAQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQW
            BBRKLY+W+6RF+37f5i7TJdcwBbu5BzAKBggqhkjOPQQDAgNJADBGAiEAlHKf6gbS
            by6XhTQO16XwtJQSUbbMT2Bi2me9v4HNlf8CIQCGJLxJdYU6KNv6GShdPjsVrCIX
            ZbPfrzKbqS5+FJqt8A==
            -----END CERTIFICATE-----
      serviceAccountTokenProjection: true
    identityProxyResources: null
    identityResources: null
    identityTrustAnchorsPEM: |
      -----BEGIN CERTIFICATE-----
      MIIBiTCCAS6gAwIBAgIBATAKBggqhkjOPQQDAjAcMRowGAYDVQQDExFpZGVudGl0
      eS5saW5rZXJkLjAeFw0yMzA3MTcwODM0MjhaFw0yNDA3MTYwODM0NDhaMBwxGjAY
      BgNVBAMTEWlkZW50aXR5LmxpbmtlcmQuMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcD
      QgAEtaB14tYhzT+jaGz7BB3Wz5RrAIzmTYPSqsw5eCPCKjHwlyDeF2RFogMYMWh3
      NaCYhlovdcAAJHL6un2GT02HBaNhMF8wDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQW
      MBQGCCsGAQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQW
      BBRKLY+W+6RF+37f5i7TJdcwBbu5BzAKBggqhkjOPQQDAgNJADBGAiEAlHKf6gbS
      by6XhTQO16XwtJQSUbbMT2Bi2me9v4HNlf8CIQCGJLxJdYU6KNv6GShdPjsVrCIX
      ZbPfrzKbqS5+FJqt8A==
      -----END CERTIFICATE-----
    identityTrustDomain: cluster.local
    imagePullPolicy: IfNotPresent
    imagePullSecrets: []
    linkerdVersion: stable-2.13.5
    networkValidator:
      connectAddr: 1.1.1.1:20001
      listenAddr: 0.0.0.0:4140
      logFormat: plain
      logLevel: debug
      timeout: 10s
    nodeAffinity: null
    nodeSelector:
      kubernetes.io/os: linux
    podAnnotations: {}
    podLabels: {}
    podMonitor:
      controller:
        enabled: true
        namespaceSelector: |
          matchNames:
            - {{ .Release.Namespace }}
            - linkerd-viz
            - linkerd-jaeger
      enabled: false
      proxy:
        enabled: true
      scrapeInterval: 10s
      scrapeTimeout: 10s
      serviceMirror:
        enabled: true
    policyController:
      image:
        name: cr.l5d.io/linkerd/policy-controller
        pullPolicy: ""
        version: ""
      logLevel: info
      probeNetworks:
      - 0.0.0.0/0
      resources:
        cpu:
          limit: ""
          request: ""
        ephemeral-storage:
          limit: ""
          request: ""
        memory:
          limit: ""
          request: ""
    policyValidator:
      caBundle: ""
      crtPEM: ""
      externalSecret: false
      injectCaFrom: ""
      injectCaFromSecret: ""
      namespaceSelector:
        matchExpressions:
        - key: config.linkerd.io/admission-webhooks
          operator: NotIn
          values:
          - disabled
    priorityClassName: ""
    profileValidator:
      caBundle: ""
      crtPEM: ""
      externalSecret: false
      injectCaFrom: ""
      injectCaFromSecret: ""
      namespaceSelector:
        matchExpressions:
        - key: config.linkerd.io/admission-webhooks
          operator: NotIn
          values:
          - disabled
    prometheusUrl: ""
    proxy:
      accessLog: ""
      await: true
      capabilities: null
      defaultInboundPolicy: all-unauthenticated
      enableExternalProfiles: false
      image:
        name: cr.l5d.io/linkerd/proxy
        pullPolicy: ""
        version: ""
      inboundConnectTimeout: 100ms
      inboundDiscoveryCacheUnusedTimeout: 90s
      isGateway: false
      isIngress: false
      logFormat: plain
      logLevel: warn,linkerd=info,trust_dns=error
      opaquePorts: 25,587,3306,4444,5432,6379,9300,11211
      outboundConnectTimeout: 1000ms
      outboundDiscoveryCacheUnusedTimeout: 5s
      podInboundPorts: ""
      ports:
        admin: 4191
        control: 4190
        inbound: 4143
        outbound: 4140
      requireIdentityOnInboundPorts: ""
      resources:
        cpu:
          limit: ""
          request: ""
        ephemeral-storage:
          limit: ""
          request: ""
        memory:
          limit: ""
          request: ""
      saMountPath: null
      shutdownGracePeriod: ""
      uid: 2102
      waitBeforeExitSeconds: 0
    proxyContainerName: linkerd-proxy
    proxyInit:
      capabilities: null
      closeWaitTimeoutSecs: 0
      ignoreInboundPorts: 4567,4568
      ignoreOutboundPorts: 4567,4568
      image:
        name: cr.l5d.io/linkerd/proxy-init
        pullPolicy: ""
        version: v2.2.1
      iptablesMode: legacy
      kubeAPIServerPorts: 443,6443
      logFormat: ""
      logLevel: ""
      privileged: false
      resources:
        cpu:
          limit: 100m
          request: 100m
        ephemeral-storage:
          limit: ""
          request: ""
        memory:
          limit: 20Mi
          request: 20Mi
      runAsRoot: false
      runAsUser: 65534
      saMountPath: null
      skipSubnets: ""
      xtMountPath:
        mountPath: /run
        name: linkerd-proxy-init-xtables-lock
        readOnly: false
    proxyInjector:
      caBundle: ""
      crtPEM: ""
      externalSecret: false
      injectCaFrom: ""
      injectCaFromSecret: ""
      namespaceSelector:
        matchExpressions:
        - key: config.linkerd.io/admission-webhooks
          operator: NotIn
          values:
          - disabled
        - key: kubernetes.io/metadata.name
          operator: NotIn
          values:
          - kube-system
          - cert-manager
    proxyInjectorProxyResources: null
    proxyInjectorResources: null
    tolerations: null
    webhookFailurePolicy: Ignore
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.13.5
  name: ext-namespace-metadata-linkerd-config
  namespace: linkerd
rules:
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get"]
  resourceNames: ["linkerd-config"]
---
###
### Identity Controller Service
###
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-identity-issuer
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.13.5
data:
  crt.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJpVENDQVM2Z0F3SUJBZ0lCQVRBS0JnZ3Foa2pPUFFRREFqQWNNUm93R0FZRFZRUURFeEZwWkdWdWRHbDAKZVM1c2FXNXJaWEprTGpBZUZ3MHlNekEzTVRjd09ETTBNamhhRncweU5EQTNNVFl3T0RNME5EaGFNQnd4R2pBWQpCZ05WQkFNVEVXbGtaVzUwYVhSNUxteHBibXRsY21RdU1Ga3dFd1lIS29aSXpqMENBUVlJS29aSXpqMERBUWNEClFnQUV0YUIxNHRZaHpUK2phR3o3QkIzV3o1UnJBSXptVFlQU3FzdzVlQ1BDS2pId2x5RGVGMlJGb2dNWU1XaDMKTmFDWWhsb3ZkY0FBSkhMNnVuMkdUMDJIQmFOaE1GOHdEZ1lEVlIwUEFRSC9CQVFEQWdFR01CMEdBMVVkSlFRVwpNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXCkJCUktMWStXKzZSRiszN2Y1aTdUSmRjd0JidTVCekFLQmdncWhrak9QUVFEQWdOSkFEQkdBaUVBbEhLZjZnYlMKYnk2WGhUUU8xNlh3dEpRU1ViYk1UMkJpMm1lOXY0SE5sZjhDSVFDR0pMeEpkWVU2S052NkdTaGRQanNWckNJWApaYlBmcnpLYnFTNStGSnF0OEE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t
  key.pem: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUE0NkxxUFRrU2RDR213K1FWRXNCckdsWWZteTVHVUNBdmt4Mm9Iamk4c3pvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFdGFCMTR0WWh6VCtqYUd6N0JCM1d6NVJyQUl6bVRZUFNxc3c1ZUNQQ0tqSHdseURlRjJSRgpvZ01ZTVdoM05hQ1lobG92ZGNBQUpITDZ1bjJHVDAySEJRPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQ==
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: linkerd-identity-trust-roots
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.13.5
data:
  ca-bundle.crt: |-
    -----BEGIN CERTIFICATE-----
    MIIBiTCCAS6gAwIBAgIBATAKBggqhkjOPQQDAjAcMRowGAYDVQQDExFpZGVudGl0
    eS5saW5rZXJkLjAeFw0yMzA3MTcwODM0MjhaFw0yNDA3MTYwODM0NDhaMBwxGjAY
    BgNVBAMTEWlkZW50aXR5LmxpbmtlcmQuMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcD
    QgAEtaB14tYhzT+jaGz7BB3Wz5RrAIzmTYPSqsw5eCPCKjHwlyDeF2RFogMYMWh3
    NaCYhlovdcAAJHL6un2GT02HBaNhMF8wDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQW
    MBQGCCsGAQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQW
    BBRKLY+W+6RF+37f5i7TJdcwBbu5BzAKBggqhkjOPQQDAgNJADBGAiEAlHKf6gbS
    by6XhTQO16XwtJQSUbbMT2Bi2me9v4HNlf8CIQCGJLxJdYU6KNv6GShdPjsVrCIX
    ZbPfrzKbqS5+FJqt8A==
    -----END CERTIFICATE-----
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-identity
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.13.5
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: identity
  ports:
  - name: grpc
    port: 8080
    targetPort: 8080
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-identity-headless
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.13.5
spec:
  clusterIP: None
  selector:
    linkerd.io/control-plane-component: identity
  ports:
  - name: grpc
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.13.5
  labels:
    app.kubernetes.io/name: identity
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.13.5
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-identity
  namespace: linkerd
spec:
  replicas: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: identity
      linkerd.io/control-plane-ns: linkerd
      linkerd.io/proxy-deployment: linkerd-identity
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      annotations:
        linkerd.io/created-by: linkerd/cli stable-2.13.5
        linkerd.io/proxy-version: stable-2.13.5
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        linkerd.io/trust-root-sha256: 982cc3b1d8e305543f06276634f9de35f18e396ce49dfeb1b8c7d788ad9ed3a0
        config.linkerd.io/default-inbound-policy: "all-unauthenticated"
      labels:
        linkerd.io/control-plane-component: identity
        linkerd.io/control-plane-ns: linkerd
        linkerd.io/workload-ns: linkerd
        linkerd.io/proxy-deployment: linkerd-identity
    spec:
      nodeSelector:
        kubernetes.io/os: linux
      
      containers:
      - args:
        - identity
        - -log-level=info
        - -log-format=plain
        - -controller-namespace=linkerd
        - -identity-trust-domain=cluster.local
        - -identity-issuance-lifetime=24h0m0s
        - -identity-clock-skew-allowance=20s
        - -identity-scheme=linkerd.io/tls
        - -enable-pprof=false
        env:
        - name: LINKERD_DISABLED
          value: "linkerd-await cannot block the identity controller"
        image: cr.l5d.io/linkerd/controller:stable-2.13.5
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9990
          initialDelaySeconds: 10
        name: identity
        ports:
        - containerPort: 8080
          name: grpc
        - containerPort: 9990
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9990
        securityContext:
          capabilities:
            drop:
            - ALL
          runAsNonRoot: true
          runAsUser: 2103
          allowPrivilegeEscalation: false
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/issuer
          name: identity-issuer
        - mountPath: /var/run/linkerd/identity/trust-roots/
          name: trust-roots
      - env:
        - name: _pod_name
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: _pod_ns
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: _pod_nodeName
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: LINKERD2_PROXY_INBOUND_PORTS_REQUIRE_TLS
          value: "8080"
        - name: LINKERD2_PROXY_LOG
          value: "warn,linkerd=info,trust_dns=error"
        - name: LINKERD2_PROXY_LOG_FORMAT
          value: "plain"
        - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
          value: linkerd-dst-headless.linkerd.svc.cluster.local.:8086
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_POLICY_SVC_ADDR
          value: linkerd-policy.linkerd.svc.cluster.local.:8090
        - name: LINKERD2_PROXY_POLICY_WORKLOAD
          value: "$(_pod_ns):$(_pod_name)"
        - name: LINKERD2_PROXY_INBOUND_DEFAULT_POLICY
          value: all-unauthenticated
        - name: LINKERD2_PROXY_POLICY_CLUSTER_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_INBOUND_CONNECT_TIMEOUT
          value: "100ms"
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_TIMEOUT
          value: "1000ms"
        - name: LINKERD2_PROXY_OUTBOUND_DISCOVERY_IDLE_TIMEOUT
          value: "5s"
        - name: LINKERD2_PROXY_INBOUND_DISCOVERY_IDLE_TIMEOUT
          value: "90s"
        - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
          value: 0.0.0.0:4190
        - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
          value: 0.0.0.0:4191
        - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
          value: 127.0.0.1:4140
        - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
          value: 0.0.0.0:4143
        - name: LINKERD2_PROXY_INBOUND_IPS
          valueFrom:
            fieldRef:
              fieldPath: status.podIPs
        - name: LINKERD2_PROXY_INBOUND_PORTS
          value: "8080,9990"
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
          value: svc.cluster.local.
        - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_INBOUND_PORTS_DISABLE_PROTOCOL_DETECTION
          value: "25,587,3306,4444,5432,6379,9300,11211"
        - name: LINKERD2_PROXY_DESTINATION_CONTEXT
          value: |
            {"ns":"$(_pod_ns)", "nodeName":"$(_pod_nodeName)"}
        - name: _pod_sa
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: _l5d_ns
          value: linkerd
        - name: _l5d_trustdomain
          value: cluster.local
        - name: LINKERD2_PROXY_IDENTITY_DIR
          value: /var/run/linkerd/identity/end-entity
        - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
          valueFrom:
            configMapKeyRef:
              name: linkerd-identity-trust-roots
              key: ca-bundle.crt
        - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
          value: /var/run/secrets/tokens/linkerd-identity-token
        - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
          value: localhost.:8080
        - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
          value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
          value: linkerd-identity.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_POLICY_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        image: cr.l5d.io/linkerd/proxy:stable-2.13.5
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: 4191
          initialDelaySeconds: 10
        name: linkerd-proxy
        ports:
        - containerPort: 4143
          name: linkerd-proxy
        - containerPort: 4191
          name: linkerd-admin
        readinessProbe:
          httpGet:
            path: /ready
            port: 4191
          initialDelaySeconds: 2
        resources:
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 2102
          seccompProfile:
            type: RuntimeDefault
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/end-entity
          name: linkerd-identity-end-entity
        - mountPath: /var/run/secrets/tokens
          name: linkerd-identity-token
      initContainers:
      - args:
        - --incoming-proxy-port
        - "4143"
        - --outgoing-proxy-port
        - "4140"
        - --proxy-uid
        - "2102"
        - --inbound-ports-to-ignore
        - "4190,4191,4567,4568"
        - --outbound-ports-to-ignore
        - "443,6443"
        image: cr.l5d.io/linkerd/proxy-init:v2.2.1
        imagePullPolicy: IfNotPresent
        name: linkerd-init
        resources:
          limits:
            cpu: "100m"
            memory: "20Mi"
          requests:
            cpu: "100m"
            memory: "20Mi"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
          privileged: false
          runAsNonRoot: true
          runAsUser: 65534
          readOnlyRootFilesystem: true
          seccompProfile:
            type: RuntimeDefault
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /run
          name: linkerd-proxy-init-xtables-lock
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: linkerd-identity
      volumes:
      - name: identity-issuer
        secret:
          secretName: linkerd-identity-issuer
      - configMap:
          name: linkerd-identity-trust-roots
        name: trust-roots
      - emptyDir: {}
        name: linkerd-proxy-init-xtables-lock
      - name: linkerd-identity-token
        projected:
          sources:
          - serviceAccountToken:
              path: linkerd-identity-token
              expirationSeconds: 86400
              audience: identity.l5d.io
      - emptyDir:
          medium: Memory
        name: linkerd-identity-end-entity
---
###
### Destination Controller Service
###
kind: Service
apiVersion: v1
metadata:
  name: linkerd-dst
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.13.5
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: grpc
    port: 8086
    targetPort: 8086
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-dst-headless
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.13.5
spec:
  clusterIP: None
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: grpc
    port: 8086
    targetPort: 8086
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-sp-validator
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.13.5
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: sp-validator
    port: 443
    targetPort: sp-validator
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-policy
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.13.5
spec:
  clusterIP: None
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: grpc
    port: 8090
    targetPort: 8090
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-policy-validator
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.13.5
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: policy-https
    port: 443
    targetPort: policy-https
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.13.5
  labels:
    app.kubernetes.io/name: destination
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.13.5
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-destination
  namespace: linkerd
spec:
  replicas: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: destination
      linkerd.io/control-plane-ns: linkerd
      linkerd.io/proxy-deployment: linkerd-destination
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      annotations:
        linkerd.io/created-by: linkerd/cli stable-2.13.5
        linkerd.io/proxy-version: stable-2.13.5
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        linkerd.io/trust-root-sha256: 982cc3b1d8e305543f06276634f9de35f18e396ce49dfeb1b8c7d788ad9ed3a0
        config.linkerd.io/default-inbound-policy: "all-unauthenticated"
      labels:
        linkerd.io/control-plane-component: destination
        linkerd.io/control-plane-ns: linkerd
        linkerd.io/workload-ns: linkerd
        linkerd.io/proxy-deployment: linkerd-destination
    spec:
      nodeSelector:
        kubernetes.io/os: linux
      
      containers:
      - env:
        - name: _pod_name
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: _pod_ns
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: _pod_nodeName
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: LINKERD2_PROXY_LOG
          value: "warn,linkerd=info,trust_dns=error"
        - name: LINKERD2_PROXY_LOG_FORMAT
          value: "plain"
        - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
          value: localhost.:8086
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_POLICY_SVC_ADDR
          value: localhost.:8090
        - name: LINKERD2_PROXY_POLICY_WORKLOAD
          value: "$(_pod_ns):$(_pod_name)"
        - name: LINKERD2_PROXY_INBOUND_DEFAULT_POLICY
          value: all-unauthenticated
        - name: LINKERD2_PROXY_POLICY_CLUSTER_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_INBOUND_CONNECT_TIMEOUT
          value: "100ms"
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_TIMEOUT
          value: "1000ms"
        - name: LINKERD2_PROXY_OUTBOUND_DISCOVERY_IDLE_TIMEOUT
          value: "5s"
        - name: LINKERD2_PROXY_INBOUND_DISCOVERY_IDLE_TIMEOUT
          value: "90s"
        - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
          value: 0.0.0.0:4190
        - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
          value: 0.0.0.0:4191
        - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
          value: 127.0.0.1:4140
        - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
          value: 0.0.0.0:4143
        - name: LINKERD2_PROXY_INBOUND_IPS
          valueFrom:
            fieldRef:
              fieldPath: status.podIPs
        - name: LINKERD2_PROXY_INBOUND_PORTS
          value: "8086,8090,8443,9443,9990,9996,9997"
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
          value: svc.cluster.local.
        - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_INBOUND_PORTS_DISABLE_PROTOCOL_DETECTION
          value: "25,587,3306,4444,5432,6379,9300,11211"
        - name: LINKERD2_PROXY_DESTINATION_CONTEXT
          value: |
            {"ns":"$(_pod_ns)", "nodeName":"$(_pod_nodeName)"}
        - name: _pod_sa
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: _l5d_ns
          value: linkerd
        - name: _l5d_trustdomain
          value: cluster.local
        - name: LINKERD2_PROXY_IDENTITY_DIR
          value: /var/run/linkerd/identity/end-entity
        - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
          valueFrom:
            configMapKeyRef:
              name: linkerd-identity-trust-roots
              key: ca-bundle.crt
        - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
          value: /var/run/secrets/tokens/linkerd-identity-token
        - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
          value: linkerd-identity-headless.linkerd.svc.cluster.local.:8080
        - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
          value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
          value: linkerd-identity.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_POLICY_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        image: cr.l5d.io/linkerd/proxy:stable-2.13.5
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: 4191
          initialDelaySeconds: 10
        name: linkerd-proxy
        ports:
        - containerPort: 4143
          name: linkerd-proxy
        - containerPort: 4191
          name: linkerd-admin
        readinessProbe:
          httpGet:
            path: /ready
            port: 4191
          initialDelaySeconds: 2
        resources:
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 2102
          seccompProfile:
            type: RuntimeDefault
        terminationMessagePolicy: FallbackToLogsOnError
        lifecycle:
          postStart:
            exec:
              command:
                - /usr/lib/linkerd/linkerd-await
                - --timeout=2m
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/end-entity
          name: linkerd-identity-end-entity
        - mountPath: /var/run/secrets/tokens
          name: linkerd-identity-token
      - args:
        - destination
        - -addr=:8086
        - -controller-namespace=linkerd
        - -enable-h2-upgrade=true
        - -log-level=info
        - -log-format=plain
        - -enable-endpoint-slices=true
        - -cluster-domain=cluster.local
        - -identity-trust-domain=cluster.local
        - -default-opaque-ports=25,587,3306,4444,5432,6379,9300,11211
        - -enable-pprof=false
        image: cr.l5d.io/linkerd/controller:stable-2.13.5
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9996
          initialDelaySeconds: 10
        name: destination
        ports:
        - containerPort: 8086
          name: grpc
        - containerPort: 9996
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9996
        securityContext:
          capabilities:
            drop:
            - ALL
          runAsNonRoot: true
          runAsUser: 2103
          allowPrivilegeEscalation: false
          seccompProfile:
            type: RuntimeDefault
      - args:
        - sp-validator
        - -log-level=info
        - -log-format=plain
        - -enable-pprof=false
        image: cr.l5d.io/linkerd/controller:stable-2.13.5
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9997
          initialDelaySeconds: 10
        name: sp-validator
        ports:
        - containerPort: 8443
          name: sp-validator
        - containerPort: 9997
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9997
        securityContext:
          capabilities:
            drop:
            - ALL
          runAsNonRoot: true
          runAsUser: 2103
          allowPrivilegeEscalation: false
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /var/run/linkerd/tls
          name: sp-tls
          readOnly: true
      - args:
        - --admin-addr=0.0.0.0:9990
        - --control-plane-namespace=linkerd
        - --grpc-addr=0.0.0.0:8090
        - --server-addr=0.0.0.0:9443
        - --server-tls-key=/var/run/linkerd/tls/tls.key
        - --server-tls-certs=/var/run/linkerd/tls/tls.crt
        - --cluster-networks=10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16
        - --identity-domain=cluster.local
        - --cluster-domain=cluster.local
        - --default-policy=all-unauthenticated
        - --log-level=info
        - --log-format=plain
        - --default-opaque-ports=25,587,3306,4444,5432,6379,9300,11211
        - --probe-networks=0.0.0.0/0
        image: cr.l5d.io/linkerd/policy-controller:stable-2.13.5
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: admin-http
        name: policy
        ports:
        - containerPort: 8090
          name: grpc
        - containerPort: 9990
          name: admin-http
        - containerPort: 9443
          name: policy-https
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: admin-http
          initialDelaySeconds: 10
        resources:
        securityContext:
          capabilities:
            drop:
            - ALL
          runAsNonRoot: true
          runAsUser: 2103
          allowPrivilegeEscalation: false
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /var/run/linkerd/tls
          name: policy-tls
          readOnly: true
      initContainers:
      - args:
        - --incoming-proxy-port
        - "4143"
        - --outgoing-proxy-port
        - "4140"
        - --proxy-uid
        - "2102"
        - --inbound-ports-to-ignore
        - "4190,4191,4567,4568"
        - --outbound-ports-to-ignore
        - "443,6443"
        image: cr.l5d.io/linkerd/proxy-init:v2.2.1
        imagePullPolicy: IfNotPresent
        name: linkerd-init
        resources:
          limits:
            cpu: "100m"
            memory: "20Mi"
          requests:
            cpu: "100m"
            memory: "20Mi"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
          privileged: false
          runAsNonRoot: true
          runAsUser: 65534
          readOnlyRootFilesystem: true
          seccompProfile:
            type: RuntimeDefault
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /run
          name: linkerd-proxy-init-xtables-lock
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: linkerd-destination
      volumes:
      - name: sp-tls
        secret:
          secretName: linkerd-sp-validator-k8s-tls
      - name: policy-tls
        secret:
          secretName: linkerd-policy-validator-k8s-tls
      - emptyDir: {}
        name: linkerd-proxy-init-xtables-lock
      - name: linkerd-identity-token
        projected:
          sources:
          - serviceAccountToken:
              path: linkerd-identity-token
              expirationSeconds: 86400
              audience: identity.l5d.io
      - emptyDir:
          medium: Memory
        name: linkerd-identity-end-entity
---
###
### Heartbeat
###
apiVersion: batch/v1
kind: CronJob
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    app.kubernetes.io/name: heartbeat
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.13.5
    linkerd.io/control-plane-component: heartbeat
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.13.5
spec:
  concurrencyPolicy: Replace
  schedule: "44 08 * * *"
  successfulJobsHistoryLimit: 0
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            linkerd.io/control-plane-component: heartbeat
            linkerd.io/workload-ns: linkerd
          annotations:
            linkerd.io/created-by: linkerd/cli stable-2.13.5
        spec:
          nodeSelector:
            kubernetes.io/os: linux
          securityContext:
            seccompProfile:
              type: RuntimeDefault
          serviceAccountName: linkerd-heartbeat
          restartPolicy: Never
          containers:
          - name: heartbeat
            image: cr.l5d.io/linkerd/controller:stable-2.13.5
            imagePullPolicy: IfNotPresent
            env:
            - name: LINKERD_DISABLED
              value: "the heartbeat controller does not use the proxy"
            args:
            - "heartbeat"
            - "-controller-namespace=linkerd"
            - "-log-level=info"
            - "-log-format=plain"
            - "-prometheus-url=http://prometheus.linkerd-viz.svc.cluster.local:9090"
            securityContext:
              capabilities:
                drop:
                - ALL
              runAsNonRoot: true
              runAsUser: 2103
              allowPrivilegeEscalation: false
              seccompProfile:
                type: RuntimeDefault
---
###
### Proxy Injector
###
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.13.5
  labels:
    app.kubernetes.io/name: proxy-injector
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.13.5
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-proxy-injector
  namespace: linkerd
spec:
  replicas: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: proxy-injector
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      annotations:
        linkerd.io/created-by: linkerd/cli stable-2.13.5
        linkerd.io/proxy-version: stable-2.13.5
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        linkerd.io/trust-root-sha256: 982cc3b1d8e305543f06276634f9de35f18e396ce49dfeb1b8c7d788ad9ed3a0
        config.linkerd.io/opaque-ports: "8443"
        config.linkerd.io/default-inbound-policy: "all-unauthenticated"
      labels:
        linkerd.io/control-plane-component: proxy-injector
        linkerd.io/control-plane-ns: linkerd
        linkerd.io/workload-ns: linkerd
        linkerd.io/proxy-deployment: linkerd-proxy-injector
    spec:
      nodeSelector:
        kubernetes.io/os: linux
      
      containers:
      - env:
        - name: _pod_name
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: _pod_ns
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: _pod_nodeName
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: LINKERD2_PROXY_LOG
          value: "warn,linkerd=info,trust_dns=error"
        - name: LINKERD2_PROXY_LOG_FORMAT
          value: "plain"
        - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
          value: linkerd-dst-headless.linkerd.svc.cluster.local.:8086
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_POLICY_SVC_ADDR
          value: linkerd-policy.linkerd.svc.cluster.local.:8090
        - name: LINKERD2_PROXY_POLICY_WORKLOAD
          value: "$(_pod_ns):$(_pod_name)"
        - name: LINKERD2_PROXY_INBOUND_DEFAULT_POLICY
          value: all-unauthenticated
        - name: LINKERD2_PROXY_POLICY_CLUSTER_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_INBOUND_CONNECT_TIMEOUT
          value: "100ms"
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_TIMEOUT
          value: "1000ms"
        - name: LINKERD2_PROXY_OUTBOUND_DISCOVERY_IDLE_TIMEOUT
          value: "5s"
        - name: LINKERD2_PROXY_INBOUND_DISCOVERY_IDLE_TIMEOUT
          value: "90s"
        - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
          value: 0.0.0.0:4190
        - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
          value: 0.0.0.0:4191
        - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
          value: 127.0.0.1:4140
        - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
          value: 0.0.0.0:4143
        - name: LINKERD2_PROXY_INBOUND_IPS
          valueFrom:
            fieldRef:
              fieldPath: status.podIPs
        - name: LINKERD2_PROXY_INBOUND_PORTS
          value: "8443,9995"
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
          value: svc.cluster.local.
        - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_INBOUND_PORTS_DISABLE_PROTOCOL_DETECTION
          value: "25,587,3306,4444,5432,6379,9300,11211"
        - name: LINKERD2_PROXY_DESTINATION_CONTEXT
          value: |
            {"ns":"$(_pod_ns)", "nodeName":"$(_pod_nodeName)"}
        - name: _pod_sa
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: _l5d_ns
          value: linkerd
        - name: _l5d_trustdomain
          value: cluster.local
        - name: LINKERD2_PROXY_IDENTITY_DIR
          value: /var/run/linkerd/identity/end-entity
        - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
          valueFrom:
            configMapKeyRef:
              name: linkerd-identity-trust-roots
              key: ca-bundle.crt
        - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
          value: /var/run/secrets/tokens/linkerd-identity-token
        - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
          value: linkerd-identity-headless.linkerd.svc.cluster.local.:8080
        - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
          value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
          value: linkerd-identity.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_POLICY_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        image: cr.l5d.io/linkerd/proxy:stable-2.13.5
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: 4191
          initialDelaySeconds: 10
        name: linkerd-proxy
        ports:
        - containerPort: 4143
          name: linkerd-proxy
        - containerPort: 4191
          name: linkerd-admin
        readinessProbe:
          httpGet:
            path: /ready
            port: 4191
          initialDelaySeconds: 2
        resources:
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 2102
          seccompProfile:
            type: RuntimeDefault
        terminationMessagePolicy: FallbackToLogsOnError
        lifecycle:
          postStart:
            exec:
              command:
                - /usr/lib/linkerd/linkerd-await
                - --timeout=2m
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/end-entity
          name: linkerd-identity-end-entity
        - mountPath: /var/run/secrets/tokens
          name: linkerd-identity-token
      - args:
        - proxy-injector
        - -log-level=info
        - -log-format=plain
        - -linkerd-namespace=linkerd
        - -enable-pprof=false
        image: cr.l5d.io/linkerd/controller:stable-2.13.5
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9995
          initialDelaySeconds: 10
        name: proxy-injector
        ports:
        - containerPort: 8443
          name: proxy-injector
        - containerPort: 9995
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9995
        securityContext:
          capabilities:
            drop:
            - ALL
          runAsNonRoot: true
          runAsUser: 2103
          allowPrivilegeEscalation: false
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /var/run/linkerd/config
          name: config
        - mountPath: /var/run/linkerd/identity/trust-roots
          name: trust-roots
        - mountPath: /var/run/linkerd/tls
          name: tls
          readOnly: true
      initContainers:
      - args:
        - --incoming-proxy-port
        - "4143"
        - --outgoing-proxy-port
        - "4140"
        - --proxy-uid
        - "2102"
        - --inbound-ports-to-ignore
        - "4190,4191,4567,4568"
        - --outbound-ports-to-ignore
        - "443,6443"
        image: cr.l5d.io/linkerd/proxy-init:v2.2.1
        imagePullPolicy: IfNotPresent
        name: linkerd-init
        resources:
          limits:
            cpu: "100m"
            memory: "20Mi"
          requests:
            cpu: "100m"
            memory: "20Mi"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
          privileged: false
          runAsNonRoot: true
          runAsUser: 65534
          readOnlyRootFilesystem: true
          seccompProfile:
            type: RuntimeDefault
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /run
          name: linkerd-proxy-init-xtables-lock
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: linkerd-proxy-injector
      volumes:
      - configMap:
          name: linkerd-config
        name: config
      - configMap:
          name: linkerd-identity-trust-roots
        name: trust-roots
      - name: tls
        secret:
          secretName: linkerd-proxy-injector-k8s-tls
      - emptyDir: {}
        name: linkerd-proxy-init-xtables-lock
      - name: linkerd-identity-token
        projected:
          sources:
          - serviceAccountToken:
              path: linkerd-identity-token
              expirationSeconds: 86400
              audience: identity.l5d.io
      - emptyDir:
          medium: Memory
        name: linkerd-identity-end-entity
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-proxy-injector
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.13.5
    config.linkerd.io/opaque-ports: "443"
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: proxy-injector
  ports:
  - name: proxy-injector
    port: 443
    targetPort: proxy-injector
---
apiVersion: v1
data:
  linkerd-config-overrides: aWRlbnRpdHk6CiAgaXNzdWVyOgogICAgdGxzOgogICAgICBjcnRQRU06IHwKICAgICAgICAtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KICAgICAgICBNSUlCaVRDQ0FTNmdBd0lCQWdJQkFUQUtCZ2dxaGtqT1BRUURBakFjTVJvd0dBWURWUVFERXhGcFpHVnVkR2wwCiAgICAgICAgZVM1c2FXNXJaWEprTGpBZUZ3MHlNekEzTVRjd09ETTBNamhhRncweU5EQTNNVFl3T0RNME5EaGFNQnd4R2pBWQogICAgICAgIEJnTlZCQU1URVdsa1pXNTBhWFI1TG14cGJtdGxjbVF1TUZrd0V3WUhLb1pJemowQ0FRWUlLb1pJemowREFRY0QKICAgICAgICBRZ0FFdGFCMTR0WWh6VCtqYUd6N0JCM1d6NVJyQUl6bVRZUFNxc3c1ZUNQQ0tqSHdseURlRjJSRm9nTVlNV2gzCiAgICAgICAgTmFDWWhsb3ZkY0FBSkhMNnVuMkdUMDJIQmFOaE1GOHdEZ1lEVlIwUEFRSC9CQVFEQWdFR01CMEdBMVVkSlFRVwogICAgICAgIE1CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVcKICAgICAgICBCQlJLTFkrVys2UkYrMzdmNWk3VEpkY3dCYnU1QnpBS0JnZ3Foa2pPUFFRREFnTkpBREJHQWlFQWxIS2Y2Z2JTCiAgICAgICAgYnk2WGhUUU8xNlh3dEpRU1ViYk1UMkJpMm1lOXY0SE5sZjhDSVFDR0pMeEpkWVU2S052NkdTaGRQanNWckNJWAogICAgICAgIFpiUGZyekticVM1K0ZKcXQ4QT09CiAgICAgICAgLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQogICAgICBrZXlQRU06IHwKICAgICAgICAtLS0tLUJFR0lOIEVDIFBSSVZBVEUgS0VZLS0tLS0KICAgICAgICBNSGNDQVFFRUlBNDZMcVBUa1NkQ0dtdytRVkVzQnJHbFlmbXk1R1VDQXZreDJvSGppOHN6b0FvR0NDcUdTTTQ5CiAgICAgICAgQXdFSG9VUURRZ0FFdGFCMTR0WWh6VCtqYUd6N0JCM1d6NVJyQUl6bVRZUFNxc3c1ZUNQQ0tqSHdseURlRjJSRgogICAgICAgIG9nTVlNV2gzTmFDWWhsb3ZkY0FBSkhMNnVuMkdUMDJIQlE9PQogICAgICAgIC0tLS0tRU5EIEVDIFBSSVZBVEUgS0VZLS0tLS0KaWRlbnRpdHlUcnVzdEFuY2hvcnNQRU06IHwKICAtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KICBNSUlCaVRDQ0FTNmdBd0lCQWdJQkFUQUtCZ2dxaGtqT1BRUURBakFjTVJvd0dBWURWUVFERXhGcFpHVnVkR2wwCiAgZVM1c2FXNXJaWEprTGpBZUZ3MHlNekEzTVRjd09ETTBNamhhRncweU5EQTNNVFl3T0RNME5EaGFNQnd4R2pBWQogIEJnTlZCQU1URVdsa1pXNTBhWFI1TG14cGJtdGxjbVF1TUZrd0V3WUhLb1pJemowQ0FRWUlLb1pJemowREFRY0QKICBRZ0FFdGFCMTR0WWh6VCtqYUd6N0JCM1d6NVJyQUl6bVRZUFNxc3c1ZUNQQ0tqSHdseURlRjJSRm9nTVlNV2gzCiAgTmFDWWhsb3ZkY0FBSkhMNnVuMkdUMDJIQmFOaE1GOHdEZ1lEVlIwUEFRSC9CQVFEQWdFR01CMEdBMVVkSlFRVwogIE1CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVcKICBCQlJLTFkrVys2UkYrMzdmNWk3VEpkY3dCYnU1QnpBS0JnZ3Foa2pPUFFRREFnTkpBREJHQWlFQWxIS2Y2Z2JTCiAgYnk2WGhUUU8xNlh3dEpRU1ViYk1UMkJpMm1lOXY0SE5sZjhDSVFDR0pMeEpkWVU2S052NkdTaGRQanNWckNJWAogIFpiUGZyekticVM1K0ZKcXQ4QT09CiAgLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-config-overrides
  namespace: linkerd
